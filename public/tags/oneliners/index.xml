<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>oneliners on Purplecarrot</title>
    <link>https://purplecarrot.co.uk/tags/oneliners/</link>
    <description>Recent content in oneliners on Purplecarrot</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Wed, 14 Jan 2015 17:20:00 +0000</lastBuildDate><atom:link href="https://purplecarrot.co.uk/tags/oneliners/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mass In Place Editing of Linux Configuration Files</title>
      <link>https://purplecarrot.co.uk/2015/01/14/mass-editing-of-linux-configuration/</link>
      <pubDate>Wed, 14 Jan 2015 17:20:00 +0000</pubDate>
      
      <guid>https://purplecarrot.co.uk/2015/01/14/mass-editing-of-linux-configuration/</guid>
      <description>
        
          &lt;p&gt;Generally, if I have 100 files that I need to edit and make changes in, I tend to write a perl or python script to make them (if I have 3 files, I just open them in VIM and make them manually!) Yesterday however, a colleague who doesn&#39;t code had to change 2 consecutive lines in about 400 similar files and wanted a simple &amp;quot;one liner&amp;quot; type way to do it.&lt;/p&gt;
&lt;p&gt;This perl one liner is what I gave him. It allows replacement of multi line text with another piece of multiline text, in place, in the file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;$ cat example.conf
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;Line1
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;Line2
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;Line3
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;Line4
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;$ perl -i -la0pe &lt;span class=&#34;s1&#34;&gt;&amp;#39;~s/Line2\nLine3/ReplaceLine2\nReplaceLine3/g&amp;#39;&lt;/span&gt; example.conf
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;$ cat example.conf
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;Line1
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;ReplaceLine2
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;ReplaceLine3
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;Line4
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It&#39;s then easy to use shell script to loop around all the files in a directory and run this command. If you&#39;re nervous, it&#39;s best to first check what your changes do by perhaps piping the file through perl.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;$ cat example.conf  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; perl -la0pe &lt;span class=&#34;s1&#34;&gt;&amp;#39;~s/Line2\nLine3/ReplaceLine2\nReplaceLine3/g&amp;#39;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;$ cat example.conf 
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;Line1
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;ReplaceLine2
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;ReplaceLine3
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;Line4
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Another idea is also to use the -i.bak option to make backup files so you have a copy of the files before the edits ;-)&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>OpenSSL Command Line Quick Reference</title>
      <link>https://purplecarrot.co.uk/2014/04/24/openssl-command-line-quick-reference/</link>
      <pubDate>Thu, 24 Apr 2014 15:55:00 +0100</pubDate>
      
      <guid>https://purplecarrot.co.uk/2014/04/24/openssl-command-line-quick-reference/</guid>
      <description>
        
          &lt;p&gt;Is there anybody in the IT industry that wasn&#39;t doing something with openssl in April? &lt;a href=&#34;http://heartbleed.com/&#34;&gt;&lt;/a&gt; I don&#39;t use the openssl command line utility that often, but last week it reminded me that openssl command line tool is pretty comprehensive and has some nice features. I thought on this occasion I&#39;d record the most useful ones so that next time I don&#39;t have to look them up again!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Show Certificate Info&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;$ openssl x509 -text -in server.cert
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;$ openssl md5 server.cert
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;$ openssl sha1 server.cert
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Confirming openssl build info&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;openssl version -a
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;OpenSSL 1.0.1e-fips &lt;span class=&#34;m&#34;&gt;11&lt;/span&gt; Feb &lt;span class=&#34;m&#34;&gt;2013&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;built on: Tue Apr  &lt;span class=&#34;m&#34;&gt;8&lt;/span&gt; 00:29:11 UTC &lt;span class=&#34;m&#34;&gt;2014&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;platform: linux-x86_64
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;options:  bn&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;64,64&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; md2&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;int&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; rc4&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;16x,int&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; des&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;idx,cisc,16,int&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; idea&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;int&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; blowfish&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;idx&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;compiler: gcc -fPIC -DOPENSSL_PIC -DZLIB -DOPENSSL_THREADS -D_REENTRANT -DDSO_DLFCN -DHAVE_DLFCN_H -DKRB5_MIT -m64 -DL_ENDIAN -DTERMIO -Wall -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; -fexceptions -fstack-protector --param&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ssp-buffer-size&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; -grecord-gcc-switches  -m64 -mtune&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;generic -Wa,--noexecstack -DPURIFY -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_MONT5 -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DAES_ASM -DVPAES_ASM -DBSAES_ASM -DWHIRLPOOL_ASM -DGHASH_ASM
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;OPENSSLDIR: &lt;span class=&#34;s2&#34;&gt;&amp;#34;/etc/pki/tls&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;engines:  dynamic 
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Generate hashed passwords (for example, for Anaconda)&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;openssl passwd -1 mysecretword
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1$utlS7bht$VLMQrtHnPU0mkSO&lt;/span&gt;/Kpzh/.
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Directory complied in and used to search for openSSL files (--openssldir)&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;openssl version -d 
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I tend to use commercial SSL certificates or ones from my company&#39;s internal CA. However, I found this text file in my home directory which I&#39;m recording here for next time because it&#39;s a very easy quick reference for generating a self signed certificate:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Generate new private key&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;openssl genrsa -aes256 -out my.key &lt;span class=&#34;m&#34;&gt;4096&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Generate new certificate request&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;openssl req -new -key my.key -out my.csr
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Sign certificate&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;openssl x509 -req -days &lt;span class=&#34;m&#34;&gt;3650&lt;/span&gt; -in my.csr -signkey my.key -out my.crt
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Remove cert password&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;openssl rsa -in my.key -out my.key 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
        
      </description>
    </item>
    
    <item>
      <title>Mirror a Remote Directory over HTTP</title>
      <link>https://purplecarrot.co.uk/2014/01/25/mirror-remote-directory-over-http/</link>
      <pubDate>Sat, 25 Jan 2014 16:07:00 +0000</pubDate>
      
      <guid>https://purplecarrot.co.uk/2014/01/25/mirror-remote-directory-over-http/</guid>
      <description>
        
          &lt;p&gt;Different ways to mirror a remote directory:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;wget -r --no-parent http://server/location
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If there are any files you don&#39;t want you can add the --reject option: &amp;lt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;wget -r --no-parent --reject&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;tmp*&amp;#34;&lt;/span&gt; http://server/location
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;curl&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
        
      </description>
    </item>
    
  </channel>
</rss>
