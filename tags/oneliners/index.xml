<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>oneliners on Purplecarrot</title><link>https://purplecarrot.co.uk/tags/oneliners/</link><description>Recent content in oneliners on Purplecarrot</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Wed, 14 Jan 2015 17:20:00 +0000</lastBuildDate><atom:link href="https://purplecarrot.co.uk/tags/oneliners/index.xml" rel="self" type="application/rss+xml"/><item><title>Mass In Place Editing of Linux Configuration Files</title><link>https://purplecarrot.co.uk/2015/01/14/mass-editing-of-linux-configuration/</link><pubDate>Wed, 14 Jan 2015 17:20:00 +0000</pubDate><guid>https://purplecarrot.co.uk/2015/01/14/mass-editing-of-linux-configuration/</guid><description>
&lt;p>Generally, if I have 100 files that I need to edit and make changes in, I tend to write a perl or python script to make them (if I have 3 files, I just open them in VIM and make them manually!) Yesterday however, a colleague who doesn't code had to change 2 consecutive lines in about 400 similar files and wanted a simple &amp;quot;one liner&amp;quot; type way to do it.&lt;/p>
&lt;p>This perl one liner is what I gave him. It allows replacement of multi line text with another piece of multiline text, in place, in the file.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln"> 1&lt;/span>$ cat example.conf
&lt;span class="ln"> 2&lt;/span>Line1
&lt;span class="ln"> 3&lt;/span>Line2
&lt;span class="ln"> 4&lt;/span>Line3
&lt;span class="ln"> 5&lt;/span>Line4
&lt;span class="ln"> 6&lt;/span>$ perl -i -la0pe &lt;span class="s1">&amp;#39;~s/Line2\nLine3/ReplaceLine2\nReplaceLine3/g&amp;#39;&lt;/span> example.conf
&lt;span class="ln"> 7&lt;/span>$ cat example.conf
&lt;span class="ln"> 8&lt;/span>Line1
&lt;span class="ln"> 9&lt;/span>ReplaceLine2
&lt;span class="ln">10&lt;/span>ReplaceLine3
&lt;span class="ln">11&lt;/span>Line4
&lt;span class="ln">12&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>It's then easy to use shell script to loop around all the files in a directory and run this command. If you're nervous, it's best to first check what your changes do by perhaps piping the file through perl.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>$ cat example.conf &lt;span class="p">|&lt;/span> perl -la0pe &lt;span class="s1">&amp;#39;~s/Line2\nLine3/ReplaceLine2\nReplaceLine3/g&amp;#39;&lt;/span>
&lt;span class="ln">2&lt;/span>$ cat example.conf
&lt;span class="ln">3&lt;/span>Line1
&lt;span class="ln">4&lt;/span>ReplaceLine2
&lt;span class="ln">5&lt;/span>ReplaceLine3
&lt;span class="ln">6&lt;/span>Line4
&lt;span class="ln">7&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Another idea is also to use the -i.bak option to make backup files so you have a copy of the files before the edits ;-)&lt;/p></description></item><item><title>OpenSSL Command Line Quick Reference</title><link>https://purplecarrot.co.uk/2014/04/24/openssl-command-line-quick-reference/</link><pubDate>Thu, 24 Apr 2014 15:55:00 +0100</pubDate><guid>https://purplecarrot.co.uk/2014/04/24/openssl-command-line-quick-reference/</guid><description>
&lt;p>Is there anybody in the IT industry that wasn't doing something with openssl in April? &lt;a href="http://heartbleed.com/">&lt;/a> I don't use the openssl command line utility that often, but last week it reminded me that openssl command line tool is pretty comprehensive and has some nice features. I thought on this occasion I'd record the most useful ones so that next time I don't have to look them up again!&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln"> 1&lt;/span>&lt;span class="c1"># Show Certificate Info&lt;/span>
&lt;span class="ln"> 2&lt;/span>$ openssl x509 -text -in server.cert
&lt;span class="ln"> 3&lt;/span>$ openssl md5 server.cert
&lt;span class="ln"> 4&lt;/span>$ openssl sha1 server.cert
&lt;span class="ln"> 5&lt;/span>
&lt;span class="ln"> 6&lt;/span>&lt;span class="c1"># Confirming openssl build info&lt;/span>
&lt;span class="ln"> 7&lt;/span>openssl version -a
&lt;span class="ln"> 8&lt;/span>OpenSSL 1.0.1e-fips &lt;span class="m">11&lt;/span> Feb &lt;span class="m">2013&lt;/span>
&lt;span class="ln"> 9&lt;/span>built on: Tue Apr &lt;span class="m">8&lt;/span> 00:29:11 UTC &lt;span class="m">2014&lt;/span>
&lt;span class="ln">10&lt;/span>platform: linux-x86_64
&lt;span class="ln">11&lt;/span>options: bn&lt;span class="o">(&lt;/span>64,64&lt;span class="o">)&lt;/span> md2&lt;span class="o">(&lt;/span>int&lt;span class="o">)&lt;/span> rc4&lt;span class="o">(&lt;/span>16x,int&lt;span class="o">)&lt;/span> des&lt;span class="o">(&lt;/span>idx,cisc,16,int&lt;span class="o">)&lt;/span> idea&lt;span class="o">(&lt;/span>int&lt;span class="o">)&lt;/span> blowfish&lt;span class="o">(&lt;/span>idx&lt;span class="o">)&lt;/span>
&lt;span class="ln">12&lt;/span>compiler: gcc -fPIC -DOPENSSL_PIC -DZLIB -DOPENSSL_THREADS -D_REENTRANT -DDSO_DLFCN -DHAVE_DLFCN_H -DKRB5_MIT -m64 -DL_ENDIAN -DTERMIO -Wall -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE&lt;span class="o">=&lt;/span>&lt;span class="m">2&lt;/span> -fexceptions -fstack-protector --param&lt;span class="o">=&lt;/span>ssp-buffer-size&lt;span class="o">=&lt;/span>&lt;span class="m">4&lt;/span> -grecord-gcc-switches -m64 -mtune&lt;span class="o">=&lt;/span>generic -Wa,--noexecstack -DPURIFY -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_MONT5 -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DAES_ASM -DVPAES_ASM -DBSAES_ASM -DWHIRLPOOL_ASM -DGHASH_ASM
&lt;span class="ln">13&lt;/span>OPENSSLDIR: &lt;span class="s2">&amp;#34;/etc/pki/tls&amp;#34;&lt;/span>
&lt;span class="ln">14&lt;/span>engines: dynamic
&lt;span class="ln">15&lt;/span>
&lt;span class="ln">16&lt;/span>&lt;span class="c1"># Generate hashed passwords (for example, for Anaconda)&lt;/span>
&lt;span class="ln">17&lt;/span>openssl passwd -1 mysecretword
&lt;span class="ln">18&lt;/span>&lt;span class="nv">$1$utlS7bht$VLMQrtHnPU0mkSO&lt;/span>/Kpzh/.
&lt;span class="ln">19&lt;/span>
&lt;span class="ln">20&lt;/span>&lt;span class="c1"># Directory complied in and used to search for openSSL files (--openssldir)&lt;/span>
&lt;span class="ln">21&lt;/span>openssl version -d
&lt;span class="ln">22&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I tend to use commercial SSL certificates or ones from my company's internal CA. However, I found this text file in my home directory which I'm recording here for next time because it's a very easy quick reference for generating a self signed certificate:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln"> 1&lt;/span>&lt;span class="c1"># Generate new private key&lt;/span>
&lt;span class="ln"> 2&lt;/span>openssl genrsa -aes256 -out my.key &lt;span class="m">4096&lt;/span>
&lt;span class="ln"> 3&lt;/span>
&lt;span class="ln"> 4&lt;/span>&lt;span class="c1"># Generate new certificate request&lt;/span>
&lt;span class="ln"> 5&lt;/span>openssl req -new -key my.key -out my.csr
&lt;span class="ln"> 6&lt;/span>
&lt;span class="ln"> 7&lt;/span>&lt;span class="c1"># Sign certificate&lt;/span>
&lt;span class="ln"> 8&lt;/span>openssl x509 -req -days &lt;span class="m">3650&lt;/span> -in my.csr -signkey my.key -out my.crt
&lt;span class="ln"> 9&lt;/span>
&lt;span class="ln">10&lt;/span>&lt;span class="c1"># Remove cert password&lt;/span>
&lt;span class="ln">11&lt;/span>openssl rsa -in my.key -out my.key
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Mirror a Remote Directory over HTTP</title><link>https://purplecarrot.co.uk/2014/01/25/mirror-remote-directory-over-http/</link><pubDate>Sat, 25 Jan 2014 16:07:00 +0000</pubDate><guid>https://purplecarrot.co.uk/2014/01/25/mirror-remote-directory-over-http/</guid><description>
&lt;p>Different ways to mirror a remote directory:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>wget -r --no-parent http://server/location
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If there are any files you don't want you can add the --reject option: &amp;lt;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>wget -r --no-parent --reject&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;tmp*&amp;#34;&lt;/span> http://server/location
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="ln">1&lt;/span>&lt;span class="n">curl&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>