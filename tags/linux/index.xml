<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on Purplecarrot</title><link>https://purplecarrot.co.uk/tags/linux/</link><description>Recent content in Linux on Purplecarrot</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Sat, 30 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://purplecarrot.co.uk/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Breaking into your OpenShift Cluster</title><link>https://purplecarrot.co.uk/post/2021-10-30-breaking_into_your_openshift_cluster/</link><pubDate>Sat, 30 Oct 2021 00:00:00 +0000</pubDate><guid>https://purplecarrot.co.uk/post/2021-10-30-breaking_into_your_openshift_cluster/</guid><description>
&lt;p>Of course, this really shouldn't happen right? You're a responsible IT professional, and your OpenShift cluster is configured with multiple authentication methods, and a secure backup of a &lt;code>kubeconfig&lt;/code> file with the system:admin user certificates for passwordless login? Except sometimes it does.&lt;/p>
&lt;p>In my day job, we have a small lab OCP cluster running on vSphere that might not get used for weeks or sometimes months. The OpenShift nodes that make up the OCP cluster sometimes get automatically powered down and left off in that powered off state.&lt;/p>
&lt;p>Yesterday, I came to use this cluster for the first time again after quite a long period and found that I was unable to login with a standard LDAP user account with cluster-admin credentials that I would normally use. In addition, my admin &lt;code>kubeconfig&lt;/code> (the one generated by openshift-installer for the original installation), had very old pre-rotation CA certs or something and hadn't been used for a while. Attempting to use it just gave x509 errors and so it seemed unusable. This has happened a couple of times now over the years, and I believe it's related to it being an IPI cluster and certificate rotation issues from the cluster being powered down for long periods. Before looking at the root cause, I'm just writing down the recovery procedure I used for next time!&lt;/p>
&lt;p>So with no standard OAUTH authentication method available, I went back trying to use the original kubeconfig from the installation of the cluster.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="ln">1&lt;/span> $ export KUBECONFIG=auth/kubeconfig
&lt;span class="ln">2&lt;/span> $ oc get nodes
&lt;span class="ln">3&lt;/span> Unable to connect to the server: x509: certificate signed by unknown authority
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To try and understand more about what was happening, I added &lt;code>--insecure-skip-tls-verify=true&lt;/code>, and the &lt;code>--loglevel=10&lt;/code> options to the command line, but I could see that a goroutine stack trace was immediately output after the x509 error message above.&lt;/p>
&lt;p>As any experienced senior engineer will know, the first place to go for solving any technical problem is a good Google or StackOverflow search. Unfortunately StackOverflow threw up a lot of articles that were old, or weren't quite right and not what I was looking for.&lt;/p>
&lt;p>Unsurprisingly - this being OpenShift - the best results were found in the &lt;a href="https://access.redhat.com/search/#/">RedHat Knowledgebase&lt;/a>. The KB articles &lt;a href="https://access.redhat.com/solutions/4505101">error: x509 certificate signed by unknown authority when logging in OpenShift 4 using the installation kubeconfig file&lt;/a> and &lt;a href="https://access.redhat.com/solutions/5286371">How to re create kubeconfig from scratch for system:admin user in OpenShift 4&lt;/a> looked promising, but both required existing access to the cluster to recreate them, which I didn't have because standard authentication methods were not working.&lt;/p>
&lt;p>I knew that all the certs I needed were on the cluster nodes themselves, but these systems were running RedHat CoreOS. RedHat CoreOS is based on RedHat Enterprise Linux, but designed very much as an appliance. It's not expected to be managed by a human sysadmin - it has disabled root account, doesn't allow passwordless logins and its OS configuration is managed by the MachineConfigOperator function of OpenShift. The next problem was that (for reasons of this being a lab and the cluster being built by a colleague) the SSH key for the coreos user used for the installation wasn't available to me either :-) I did however, have access to the vSphere console of these VMS. There was no option, I had break my way in and get those certs.&lt;/p>
&lt;p>The first thing was to boot the system to single user, reset the root password so I could login on the console. I've done this thousands of times over the years on many different versions of Linux and flavours of Linux, but interestingly this was more complicated on CoreOS (because of the way CoreOS works, and so it's not normally required). However, I did eventually get in and then I was able to locate the files I needed.&lt;/p>
&lt;p>So all the secrets needed to run kube-apiserver are found in &lt;code>/etc/kubenetes/static-pod-resources/kube-apiserver-certs&lt;/code>. In particular, the node-kubeconfigs/ directory has mulitple kubeconfig files, one of which was called &lt;code>lb-int.kubeconfig&lt;/code>. When I set my KUBECONFIG environment variable to point to this file, I was then able to issue oc commands to the cluster:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="ln">1&lt;/span> # cd /etc/kubenetes/static-pod-resources/kube-apiserver-certs/secrets/node-kubeconfigs
&lt;span class="ln">2&lt;/span> # export KUBECONFIG=$(pwd)/lb-int.kubeconfig
&lt;span class="ln">3&lt;/span> # oc get nodes
&lt;span class="ln">4&lt;/span> &amp;lt;lots of nodes with STATUS NotReady&amp;gt;
&lt;span class="ln">5&lt;/span> # oc get pods -A | grep -e Running
&lt;span class="ln">6&lt;/span> &amp;lt;lots of pods in ContainerCreating or Pending
&lt;span class="ln">7&lt;/span> # oc get csr -o name | xargs oc adm certificate approve
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I found that half the nodes were in state &lt;code>NotReady&lt;/code>, and so the oauth-openshift containers were not &lt;code>Running&lt;/code>. This in turn was because there were a bunch of unapproved CSRs. Once these were approved, the nodes became &lt;code>Ready&lt;/code> and the OAuth authentication pods were able to start up and the cluster recovered itself in the usual way. I was then able to login normally again and recreate a backup &lt;code>kubeconfig&lt;/code>!&lt;/p></description></item><item><title>Does Alpine resolve DNS properly?</title><link>https://purplecarrot.co.uk/post/2021-09-04_does_alpine-resolve_dns_properly/</link><pubDate>Sat, 04 Sep 2021 08:51:20 +0100</pubDate><guid>https://purplecarrot.co.uk/post/2021-09-04_does_alpine-resolve_dns_properly/</guid><description>
&lt;p>To anybody who has ever used containers, Alpine is a well known base operating system layer to many popular and widely used container images in use today. By design, it's a cut down minimal OS layer using the excellent &lt;a href="https://www.busybox.net/">busybox&lt;/a> and &lt;a href="https://musl.libc.org/">musl libc&lt;/a> C library. By using these alternatives to GNU Coreutils and GNU glibc C Library, it provides a base OS container layer that allows you to build and run very small Linux containers.&lt;/p>
&lt;p>This week I was asked to look at a problem where an application team could not resolve a key DNS name used on our internal network when running their application within the container - their first thought was a problem with the OpenShift/Kubernetes environment where the container was running.&lt;/p>
&lt;p>Unfortunately, the company I work for doesn't like us to disclose internal proprietary network information, so for the purposes of the post, let's say the DNS name being queried is &lt;code>vis.company.com&lt;/code> (very important service). All IPs and some other data in the extracts below have been manually changed to private RFC1918 addresses or redacted too.&lt;/p>
&lt;h2 id="basic-troubleshooting">Basic Troubleshooting&lt;/h2>
&lt;p>The first thing to do was to perform my own DNS lookup of &lt;code>vis.company.com&lt;/code>. This worked fine from both my Linux workstation and Windows laptop.&lt;/p>
&lt;p>Now what made this problem interesting was that the application running in the container was able to resolve all other DNS entries that it was required to in order to function(eg &lt;code>a.company.com&lt;/code>, &lt;code>b.company.com&lt;/code>), but it couldn't resolve this one crucial DNS entry &lt;code>vis.company.com&lt;/code>. When you connected to a shell running inside the container and ran &lt;code>getent hosts vis.company.com&lt;/code> it simply returned nothing at all, and exited with exit code 2.&lt;/p>
&lt;h2 id="inside-the-container">Inside the Container&lt;/h2>
&lt;p>So how do you go about troubleshooting a problem like this from within a container? In a standard OS, you can simply use the standard tools in your sysadmin toolkit - ss (lsof/netstat), dig, strace, tcpdump, nmap, etc - but inside a container these are unlikely to be available by default (and some containers don't even include a minimal unix shell even). I have a pre-built container I use for situations like this that I then add as a sidecar in the pod I'm troubleshooting. Then by setting &lt;code>shareProcessNamespace: true&lt;/code> in the podspec, it will allow you to easily debug and strace processes running inside the first container from the sidecar.&lt;/p>
&lt;h2 id="dns-query">DNS Query&lt;/h2>
&lt;p>So strace'ing the DNS queries I could see the &lt;code>socket()&lt;/code> and &lt;code>bind()&lt;/code> calls, followed by receiving a response from the DNS server. However, this response was empty. Something weird was happening, because running the same command on a standard Linux host you could see 100s of lines more of system calls and a good DNS response with multiple A records was returned.&lt;/p>
&lt;p>So the next step was to use tcpdump and capture a packet trace of the DNS query. Below is the relevant section from that pcap that shows the DNS query:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="ln">1&lt;/span>18:00:27.376761 IP (tos 0x0, ttl 64, id 32569, offset 0, flags [DF], proto UDP (17), length 68)
&lt;span class="ln">2&lt;/span> 10.96.10.99.43507 &amp;gt; 10.96.0.10:domain: 19977+ A? vis.company.com. (40)
&lt;span class="ln">3&lt;/span>18:00:27.386585 IP (tos 0x0, ttl 64, id 24288, offset 0, flags [DF], proto UDP (17), length 79)
&lt;span class="ln">4&lt;/span> 10.96.0.10.domain &amp;gt; 10.96.10.99.43507: 19977| 0/0/1 (51)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>So what does this tell us?&lt;/p>
&lt;ol>
&lt;li>This is standard UDP DNS query (id 19977) to query the IPv4 record &lt;code>vis.company.com&lt;/code>&lt;/li>
&lt;li>The DNS server response comes from &lt;code>10.96.0.10&lt;/code>, which is the Kubernetes &lt;code>Service&lt;/code> address for CoreDNS.&lt;/li>
&lt;li>A DNS response was received, but no DNS records were in it (&lt;code>0/0/1&lt;/code> = 0 answer records, 0 nameservers and 1 additional record which is the query address itself)&lt;/li>
&lt;li>The &lt;code>|&lt;/code> character after the 19977 id indicates that the TC (TrunCation) bit is set on this packet.&lt;/li>
&lt;/ol>
&lt;p>The most interesting of these is the last. The TC bit is used when the DNS response the DNS server wants to send to the client is longer than the 512bytes available to it in a UDP packet (see &lt;a href="https://datatracker.ietf.org/doc/html/rfc1035">RFC1035&lt;/a> for more information.)&lt;/p>
&lt;p>This is a signal to the DNS resolver client that it needs to switch from a standard UDP DNS query and do a new TCP DNS query instead - but in both the strace and tcpdump output of the application running the the Alpine container, the resolver query exited immediate after receiving this TC UDP packet from the DNS server.&lt;/p>
&lt;p>I expected this to be a bug, but it turned out that this is a &lt;a href="https://wiki.musl-libc.org/functional-differences-from-glibc.html">functional difference between musl libc and glibc&lt;/a> and is by design. The musl libc author states that he intentionally didn't support TCP as felt it would be better for performance and UX reasons:&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">My choice not to do TCP in musl&amp;#39;s stub resolver was based on an interpretation that truncated results are not just acceptable but better ux - not only do you save major round-trip delays to DNS but you also get a reasonable upper bound on # of addrs in result.&lt;/p>&amp;mdash; Rich Felker (@RichFelker) &lt;a href="https://twitter.com/RichFelker/status/994629795551031296?ref_src=twsrc%5Etfw">May 10, 2018&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;p>This is true, and a valid point. However, it means that this particular app would never work when running in a container based on Alpine. Sometimes predictable functionality is more important.&lt;/p>
&lt;p>There are various other ways this could have been made to work. Perhaps making the DNS entry smaller - which was indeed unnecessarily large - would indeed be a better fix, but unfortunately this wasn't a practical option as the DNS entry wasn't under this team's control.&lt;/p>
&lt;p>Instead, the quickest fix was to rebuild the application into a new container image using the RedHat UBI8 image as a base layer instead of Alpine. This image uses glibc resolver, and then the app then ran fine, in the same way as it did on the RedHat Linux 8 host where it had ran before being containerized.&lt;/p></description></item><item><title>Generating a RPM changelog using git log</title><link>https://purplecarrot.co.uk/2015/11/19/generating-rpm-changelog-from-git-log/</link><pubDate>Thu, 19 Nov 2015 16:11:00 +0000</pubDate><guid>https://purplecarrot.co.uk/2015/11/19/generating-rpm-changelog-from-git-log/</guid><description>
&lt;p>I use python setuptools bdist_rpm to build RPMs from the code in my git repositories and today I updated my automated build script (a wrapper around python setup.py to run pre-requisite functions) to generate an RPM changelog from the git log of the repository hosting the package and then automatically include this in the rpm being built. A search on github shows there are a few python scripts and pypi modules to do this, but I wondered if I could just use git log.&lt;/p>
&lt;p>It seems you can. The &lt;a href="http://fedoraproject.org/wiki/Packaging:Guidelines#Changelogs">Fedora packaging&lt;/a> describe the format of the changelog file. They also appear to recommend not using your vcs changelog as your changelog messages would be too terse for the users. However, in my case they're not and it's exactly what they want&lt;/p>
&lt;p>With git log you can use the --pretty option to format the output of the commit log. You select the appropriate formats from git &lt;a href="http://git-scm.com/docs/pretty-formats">pretty-formats&lt;/a> to make it output the git log in RPM changelog format. Unfortunately though, none of the date formats available are quite the correct format for an RPM changelog. It expects just the date of the change and doesn't want (nor can it handle) the time or the timezone offset of the git commit. The way I addressed this was to pipe the git log output through perl to remove those date fields. It would be nicer if git log had date +%H:%M:%S type formatting, but it doesn't, so we add the perl oneliner with a suitable regex to remove the parts we don't want.&lt;/p>
&lt;p>Also rpm-build (or perhaps setuptools) doesn't like any blank lines in the changelog file, so we remove those with perl -00 option. The contents of the generated changelog file (not the filename) are then passed into the setup.py --changelog option. The double quotes ensure the whitespace is preserved.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>$ git log --pretty&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;tformat:* %cd %an &amp;lt;%ae&amp;gt; (%h)%n- %s%b%n&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="se">&lt;/span>&lt;span class="p">|&lt;/span> perl -lap00e &lt;span class="s1">&amp;#39;~s/(\d{2]:){2}\d{2} (\d{4}) [+-]\d{4}/$2/g&amp;#39;&lt;/span> &amp;gt; changelog
&lt;span class="ln">3&lt;/span>$ python setup.py bdist_rpm --changelog&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>ltchangelog&lt;span class="k">)&lt;/span>&lt;span class="s2">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Fedora 22, Wayland and Multiple Monitors</title><link>https://purplecarrot.co.uk/2015/09/24/fedora-22-wayland-and-multiple-monitors/</link><pubDate>Thu, 24 Sep 2015 20:57:00 +0100</pubDate><guid>https://purplecarrot.co.uk/2015/09/24/fedora-22-wayland-and-multiple-monitors/</guid><description>
&lt;p>By default, a new Fedora installation or a fedup upgrade on my dual monitor machine will result in GDM displaying the list of users and login screen on my left hand monitor. But I want it on my right hand monitor...&lt;/p>
&lt;p>Up until now, I simply logged in and set up the configuration I wanted using Settings -&amp;gt; Displays. Then I took the ~/.config/monitors.xml file that is generated and copied it to /var/lib/gdm/.config/monitors.xml ready for GDM to use.&lt;/p>
&lt;p>However, with Fedora 22, it appears that GDM is set to use Wayland, however once you login to a session, it continues to use X. This new Wayland config uses slightly different XML directives in the monitors.xml meaning a simple copy of your ~/.config/monitors.xml to /var/lib/gdm/.config/monitors.xml no longer works.&lt;/p>
&lt;p>To work around this, click on the cog and select GNOME on Wayland. Then setup the Displays as you need them and then copy the ~/.config/monitors.xml file (which will be in &amp;quot;Wayland&amp;quot; format) again to /var/lib/gdm/.config/monitors.xml and restart GDM (there may be a better way, but I switch to a virtual console and do init 3 followed by init 5)&lt;/p>
&lt;p>Then your GDM login screen will be correctly setup.&lt;/p>
&lt;p>&lt;em>UPDATE 20151008: After upgrading to latest rpm set last night, this is now broken again and GDM is displaying the login on the monitor I don't want it to be on. I verified the monitors.xml file for gdm was correct, but for some reason gdm doesn't appear to be honoring it. Not being something I want to investigate, I decided to just disable Wayland for the moment by adding the WaylandEnable=False /etc/gdm/custom.conf :-)&lt;/em>&lt;/p></description></item><item><title>PKI Certificate Encoding Formats and File Extensions</title><link>https://purplecarrot.co.uk/2015/05/22/pki-certificate-encoding-formats-and/</link><pubDate>Fri, 22 May 2015 10:29:00 +0100</pubDate><guid>https://purplecarrot.co.uk/2015/05/22/pki-certificate-encoding-formats-and/</guid><description>
&lt;p>There are many different file formats and file extensions for storing certificates. It seems each time I come around to renewing a cert, I have forgetten what all the files and extensions mean. So for next time... Certificates are generally encoded in either Base64, PEM, or DEM formats.&lt;/p>
&lt;p>&lt;strong>Base64 (.cer)&lt;/strong>
Originally developed for use with S/MIME (the first?) and the most widely supported format. More likely to be issued by Certificate Authorities that run on Linux. A base64 encoded certificate can be opened in vi and will start with &amp;quot;-----BEGIN CERTIFICATE-----&amp;quot; and end with &amp;quot;-----END CERTIFICATE-----&amp;quot; with the BASE64 encoded data in the middle.&lt;/p>
&lt;p>&lt;strong>PEM - Privacy Enhanced Mail (.pem,.crt, .key, .cer)&lt;/strong>
The PEM format is the most common format that CAs issue certificates in. They are ASCII and also BASE64 encoded and end and start with the same &amp;quot;-----BEGIN CERTIFICATE-----&amp;quot; and &amp;quot;-----END CERTIFICATE-----&amp;quot; Certificates, certificate chains and private keys can be put into and distributed in PEM format.&lt;/p>
&lt;p>&lt;strong>DER - Distinguished Encoding Rules (.der, but also .cer or .crt)&lt;/strong>
This is actually the same as PEM but whereas PEM is Base64 ASCII, DER is a binary form of the certificate and it does not have the BEGIN/END statements. DER format supports storage of a single certificate, but can't be used for storing a private key or certificate chain. DER format is typically seen with java based platforms and applications.&lt;/p>
&lt;p>&lt;strong>PFX - Personal Information Exchange (.pfx)&lt;/strong>
The PFX format (also known as PKCS #12) is a format that stores multiple certificates and private keys in one file. They are typically used on Windows machines to facilitate import and exports. They can be readily converted to the other formats&lt;/p>
&lt;p>&lt;strong>PKCS#7 (.p7b)&lt;/strong>
Allows storage of certificates and certificate chains but not private keys and commonly used by Certicate Authorities to provide certificate chains to clients.&lt;/p></description></item><item><title>Mass In Place Editing of Linux Configuration Files</title><link>https://purplecarrot.co.uk/2015/01/14/mass-editing-of-linux-configuration/</link><pubDate>Wed, 14 Jan 2015 17:20:00 +0000</pubDate><guid>https://purplecarrot.co.uk/2015/01/14/mass-editing-of-linux-configuration/</guid><description>
&lt;p>Generally, if I have 100 files that I need to edit and make changes in, I tend to write a perl or python script to make them (if I have 3 files, I just open them in VIM and make them manually!) Yesterday however, a colleague who doesn't code had to change 2 consecutive lines in about 400 similar files and wanted a simple &amp;quot;one liner&amp;quot; type way to do it.&lt;/p>
&lt;p>This perl one liner is what I gave him. It allows replacement of multi line text with another piece of multiline text, in place, in the file.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln"> 1&lt;/span>$ cat example.conf
&lt;span class="ln"> 2&lt;/span>Line1
&lt;span class="ln"> 3&lt;/span>Line2
&lt;span class="ln"> 4&lt;/span>Line3
&lt;span class="ln"> 5&lt;/span>Line4
&lt;span class="ln"> 6&lt;/span>$ perl -i -la0pe &lt;span class="s1">&amp;#39;~s/Line2\nLine3/ReplaceLine2\nReplaceLine3/g&amp;#39;&lt;/span> example.conf
&lt;span class="ln"> 7&lt;/span>$ cat example.conf
&lt;span class="ln"> 8&lt;/span>Line1
&lt;span class="ln"> 9&lt;/span>ReplaceLine2
&lt;span class="ln">10&lt;/span>ReplaceLine3
&lt;span class="ln">11&lt;/span>Line4
&lt;span class="ln">12&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>It's then easy to use shell script to loop around all the files in a directory and run this command. If you're nervous, it's best to first check what your changes do by perhaps piping the file through perl.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>$ cat example.conf &lt;span class="p">|&lt;/span> perl -la0pe &lt;span class="s1">&amp;#39;~s/Line2\nLine3/ReplaceLine2\nReplaceLine3/g&amp;#39;&lt;/span>
&lt;span class="ln">2&lt;/span>$ cat example.conf
&lt;span class="ln">3&lt;/span>Line1
&lt;span class="ln">4&lt;/span>ReplaceLine2
&lt;span class="ln">5&lt;/span>ReplaceLine3
&lt;span class="ln">6&lt;/span>Line4
&lt;span class="ln">7&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Another idea is also to use the -i.bak option to make backup files so you have a copy of the files before the edits ;-)&lt;/p></description></item><item><title>Minecraft GNOME Desktop Icon</title><link>https://purplecarrot.co.uk/2014/10/07/minecraft/</link><pubDate>Tue, 07 Oct 2014 18:30:00 +0100</pubDate><guid>https://purplecarrot.co.uk/2014/10/07/minecraft/</guid><description>
&lt;p>I had an email about the minecraft.desktop file in the config file in a previous post. My kids love to play Minecraft, and installation of this simple GNOME .desktop file gives them the launcher icon on their desktops.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln"> 1&lt;/span>cat &lt;span class="p">&amp;amp;&lt;/span>lt&lt;span class="p">;&amp;amp;&lt;/span>lt&lt;span class="p">;&lt;/span> EOF &lt;span class="p">&amp;amp;&lt;/span>gt&lt;span class="p">;&amp;amp;&lt;/span>gt&lt;span class="p">;&lt;/span> /usr/share/applications/minecraft.desktop
&lt;span class="ln"> 2&lt;/span>&lt;span class="o">[&lt;/span>Desktop Entry&lt;span class="o">]&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="nv">Version&lt;/span>&lt;span class="o">=&lt;/span>1.0
&lt;span class="ln"> 4&lt;/span>&lt;span class="nv">Name&lt;/span>&lt;span class="o">=&lt;/span>Minecraft
&lt;span class="ln"> 5&lt;/span>&lt;span class="nv">GenericName&lt;/span>&lt;span class="o">=&lt;/span>Minecraft
&lt;span class="ln"> 6&lt;/span>&lt;span class="nv">Comment&lt;/span>&lt;span class="o">=&lt;/span>Minecraft
&lt;span class="ln"> 7&lt;/span>&lt;span class="nv">Exec&lt;/span>&lt;span class="o">=&lt;/span>java -jar /data/minecraft/Minecraft.jar
&lt;span class="ln"> 8&lt;/span>&lt;span class="nv">Icon&lt;/span>&lt;span class="o">=&lt;/span>mcicon256
&lt;span class="ln"> 9&lt;/span>&lt;span class="nv">Terminal&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">false&lt;/span>
&lt;span class="ln">10&lt;/span>&lt;span class="nv">Type&lt;/span>&lt;span class="o">=&lt;/span>Application
&lt;span class="ln">11&lt;/span>EOF
&lt;span class="ln">12&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then of course, you must copy the nice shiny minecraft icon into /usr/share/icons/mcicon256.png. I also created a very basic puppet manifest to install it on their computers too!:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln"> 1&lt;/span>$ cat minecraft.pp
&lt;span class="ln"> 2&lt;/span>file &lt;span class="o">{&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;/data/minecraft&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>:
&lt;span class="ln"> 3&lt;/span> &lt;span class="nv">ensure&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>gt&lt;span class="p">;&lt;/span> &lt;span class="s2">&amp;#34;directory&amp;#34;&lt;/span>,
&lt;span class="ln"> 4&lt;/span>&lt;span class="o">}&lt;/span>
&lt;span class="ln"> 5&lt;/span>
&lt;span class="ln"> 6&lt;/span>file &lt;span class="o">{&lt;/span> &lt;span class="s2">&amp;#34;/usr/share/icons/mcicon256.png&amp;#34;&lt;/span>:
&lt;span class="ln"> 7&lt;/span> &lt;span class="nv">ensure&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>gt&lt;span class="p">;&lt;/span> file,
&lt;span class="ln"> 8&lt;/span> &lt;span class="nv">owner&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>gt&lt;span class="p">;&lt;/span> root,
&lt;span class="ln"> 9&lt;/span> &lt;span class="nv">group&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>gt&lt;span class="p">;&lt;/span> root,
&lt;span class="ln">10&lt;/span> &lt;span class="nv">mode&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>gt&lt;span class="p">;&lt;/span> 644,
&lt;span class="ln">11&lt;/span> &lt;span class="nb">source&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>gt&lt;span class="p">;&lt;/span> &lt;span class="s2">&amp;#34;puppet:///files/minecraft/mcicon256.png&amp;#34;&lt;/span>
&lt;span class="ln">12&lt;/span>&lt;span class="o">}&lt;/span>
&lt;span class="ln">13&lt;/span>
&lt;span class="ln">14&lt;/span>file &lt;span class="o">{&lt;/span> &lt;span class="s2">&amp;#34;/usr/share/applications/minecraft.desktop&amp;#34;&lt;/span>:
&lt;span class="ln">15&lt;/span> &lt;span class="nv">ensure&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>gt&lt;span class="p">;&lt;/span> file,
&lt;span class="ln">16&lt;/span> &lt;span class="nv">owner&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>gt&lt;span class="p">;&lt;/span> root,
&lt;span class="ln">17&lt;/span> &lt;span class="nv">group&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>gt&lt;span class="p">;&lt;/span> root,
&lt;span class="ln">18&lt;/span> &lt;span class="nv">mode&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>gt&lt;span class="p">;&lt;/span> 644,
&lt;span class="ln">19&lt;/span> &lt;span class="nb">source&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>gt&lt;span class="p">;&lt;/span> &lt;span class="s2">&amp;#34;puppet:///files/minecraft/minecraft.desktop&amp;#34;&lt;/span>
&lt;span class="ln">20&lt;/span>&lt;span class="o">}&lt;/span>
&lt;span class="ln">21&lt;/span>
&lt;span class="ln">22&lt;/span>file &lt;span class="o">{&lt;/span> &lt;span class="s2">&amp;#34;/data/minecraft/startminecraft.sh&amp;#34;&lt;/span>:
&lt;span class="ln">23&lt;/span> &lt;span class="nv">ensure&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>gt&lt;span class="p">;&lt;/span> file,
&lt;span class="ln">24&lt;/span> &lt;span class="nv">owner&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>gt&lt;span class="p">;&lt;/span> root,
&lt;span class="ln">25&lt;/span> &lt;span class="nv">group&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>gt&lt;span class="p">;&lt;/span> root,
&lt;span class="ln">26&lt;/span> &lt;span class="nv">mode&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>gt&lt;span class="p">;&lt;/span> 755,
&lt;span class="ln">27&lt;/span> &lt;span class="nb">source&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>gt&lt;span class="p">;&lt;/span> &lt;span class="s2">&amp;#34;puppet:///files/minecraft/startminecraft.sh&amp;#34;&lt;/span>
&lt;span class="ln">28&lt;/span>&lt;span class="o">}&lt;/span>
&lt;span class="ln">29&lt;/span>
&lt;span class="ln">30&lt;/span>file &lt;span class="o">{&lt;/span> &lt;span class="s2">&amp;#34;/data/minecraft/Minecraft.jar&amp;#34;&lt;/span>:
&lt;span class="ln">31&lt;/span> &lt;span class="nv">ensure&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>gt&lt;span class="p">;&lt;/span> file,
&lt;span class="ln">32&lt;/span> &lt;span class="nv">owner&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>gt&lt;span class="p">;&lt;/span> root,
&lt;span class="ln">33&lt;/span> &lt;span class="nv">group&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>gt&lt;span class="p">;&lt;/span> root,
&lt;span class="ln">34&lt;/span> &lt;span class="nv">mode&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>gt&lt;span class="p">;&lt;/span> 644,
&lt;span class="ln">35&lt;/span> &lt;span class="nb">source&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>gt&lt;span class="p">;&lt;/span> &lt;span class="s2">&amp;#34;puppet:///files/minecraft/Minecraft.jar&amp;#34;&lt;/span>
&lt;span class="ln">36&lt;/span>&lt;span class="o">}&lt;/span>
&lt;span class="ln">37&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Configuring GNOME 3 Desktop and Shell</title><link>https://purplecarrot.co.uk/2014/05/13/configuring-gnome-3-desktop-and-shell/</link><pubDate>Tue, 13 May 2014 17:30:00 +0100</pubDate><guid>https://purplecarrot.co.uk/2014/05/13/configuring-gnome-3-desktop-and-shell/</guid><description>
&lt;p>When it comes to customising GNOME, its config has always confused me - gconf, dconf, gconf-edit, gconftool - what are they all for? The furthest I've ever delved into them was copying and pasting some tips (give me my minimize and maximize buttons back!).&lt;/p>
&lt;p>My Linux work is almost exclusively with headless servers sitting in data centres I never see, so I've never taken the trouble to read or understand GNOME configuration. There has been lots of &lt;a href="http://http//en.wikipedia.org/wiki/Controversy_over_GNOME_3">controversy&lt;/a> over GNOME 3. I'm all for change, but if only the configuration of GNOME 3 was easy a little easier. Most options aren't available to set in the GUI control panel, but there are plenty of options to be set. Unfortunately they tend to be hidden away and it is not at all clear how to set common settings. In turn, because of GNOME changes between versions, googling GNOME config finds much inaccurate or at best, out of date information.&lt;/p>
&lt;p>It was time to properly understand all these things.&lt;/p>
&lt;p>Forget gconftool, gconf-edit and scripts that sed gschema XML files (yes, there are some people sed'ing XML files out there!). For GNOME 3 on Fedora 20 (RHEL 7), there are two tools of interest: gsettings and dconf-editor
This is best illustrated by way of an example. Here is a list of common settings I put as default on my Fedora desktops. They should be pretty self-explanatory. The links below contain list of further configuration settings you can apply. I only wish these were more readily exposed in the GUI.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="ln"> 1&lt;/span>&lt;span class="c1"># Show Date in Gnome Shell Title Bar&lt;/span>
&lt;span class="ln"> 2&lt;/span>&lt;span class="n">cat&lt;/span> \&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">lt&lt;/span>&lt;span class="p">;&lt;/span>\&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">eof&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">usr&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">share&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">glib&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mf">2.0&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">schemas&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">mysettings&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">gschema&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">override&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">gnome&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">desktop&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">interface&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="ln"> 4&lt;/span>&lt;span class="n">clock&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">date&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">true&lt;/span>
&lt;span class="ln"> 5&lt;/span>&lt;span class="n">always&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">true&lt;/span>
&lt;span class="ln"> 6&lt;/span>
&lt;span class="ln"> 7&lt;/span>&lt;span class="c1"># Set the default icons in the icon bar&lt;/span>
&lt;span class="ln"> 8&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">gnome&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">desktop&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">shell&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="ln"> 9&lt;/span>&lt;span class="n">favorite&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">apps&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;firefox.desktop&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;google-chrome.desktop&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;gnome-terminal.desktop&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;shotwell.desktop&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;nautilus.desktop&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;system-config-printer.desktop&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;minecraft.desktop&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="ln">10&lt;/span>
&lt;span class="ln">11&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">gnome&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">desktop&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">screensaver&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="ln">12&lt;/span>&lt;span class="n">idle&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">activation&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">enabled&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">false&lt;/span>
&lt;span class="ln">13&lt;/span>
&lt;span class="ln">14&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">gnome&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">shell&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">overrides&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="ln">15&lt;/span>&lt;span class="n">button_layout&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">minimize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">maximize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">close&lt;/span>
&lt;span class="ln">16&lt;/span>
&lt;span class="ln">17&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">gnome&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Terminal&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Legacy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Profile&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="ln">18&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">colors&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">false&lt;/span>
&lt;span class="ln">19&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">font&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">false&lt;/span>
&lt;span class="ln">20&lt;/span>&lt;span class="n">foreground&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;#ffffff&amp;#39;&lt;/span>
&lt;span class="ln">21&lt;/span>&lt;span class="n">background&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;#000000&amp;#39;&lt;/span>
&lt;span class="ln">22&lt;/span>&lt;span class="n">font&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;Inconsolata Medium 11&amp;#39;&lt;/span>
&lt;span class="ln">23&lt;/span>
&lt;span class="ln">24&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">eof&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>References&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/9-Beta/html/Desktop_Migration_and_Administration_Guide/gsettings-dconf.html">RedHat RHEL7 Desktop Migration and Administration Guide&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.gnome.org/gio/stable/GSettings.html#GSettings.description">GNOME gsettings reference&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://askubuntu.com/questions/249887/gconf-dconf-gsettings-and-the-relationship-between-them">dconf, gconf and gsettings and the relationship between them&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>OpenSSL Command Line Quick Reference</title><link>https://purplecarrot.co.uk/2014/04/24/openssl-command-line-quick-reference/</link><pubDate>Thu, 24 Apr 2014 15:55:00 +0100</pubDate><guid>https://purplecarrot.co.uk/2014/04/24/openssl-command-line-quick-reference/</guid><description>
&lt;p>Is there anybody in the IT industry that wasn't doing something with openssl in April? &lt;a href="http://heartbleed.com/">&lt;/a> I don't use the openssl command line utility that often, but last week it reminded me that openssl command line tool is pretty comprehensive and has some nice features. I thought on this occasion I'd record the most useful ones so that next time I don't have to look them up again!&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln"> 1&lt;/span>&lt;span class="c1"># Show Certificate Info&lt;/span>
&lt;span class="ln"> 2&lt;/span>$ openssl x509 -text -in server.cert
&lt;span class="ln"> 3&lt;/span>$ openssl md5 server.cert
&lt;span class="ln"> 4&lt;/span>$ openssl sha1 server.cert
&lt;span class="ln"> 5&lt;/span>
&lt;span class="ln"> 6&lt;/span>&lt;span class="c1"># Confirming openssl build info&lt;/span>
&lt;span class="ln"> 7&lt;/span>openssl version -a
&lt;span class="ln"> 8&lt;/span>OpenSSL 1.0.1e-fips &lt;span class="m">11&lt;/span> Feb &lt;span class="m">2013&lt;/span>
&lt;span class="ln"> 9&lt;/span>built on: Tue Apr &lt;span class="m">8&lt;/span> 00:29:11 UTC &lt;span class="m">2014&lt;/span>
&lt;span class="ln">10&lt;/span>platform: linux-x86_64
&lt;span class="ln">11&lt;/span>options: bn&lt;span class="o">(&lt;/span>64,64&lt;span class="o">)&lt;/span> md2&lt;span class="o">(&lt;/span>int&lt;span class="o">)&lt;/span> rc4&lt;span class="o">(&lt;/span>16x,int&lt;span class="o">)&lt;/span> des&lt;span class="o">(&lt;/span>idx,cisc,16,int&lt;span class="o">)&lt;/span> idea&lt;span class="o">(&lt;/span>int&lt;span class="o">)&lt;/span> blowfish&lt;span class="o">(&lt;/span>idx&lt;span class="o">)&lt;/span>
&lt;span class="ln">12&lt;/span>compiler: gcc -fPIC -DOPENSSL_PIC -DZLIB -DOPENSSL_THREADS -D_REENTRANT -DDSO_DLFCN -DHAVE_DLFCN_H -DKRB5_MIT -m64 -DL_ENDIAN -DTERMIO -Wall -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE&lt;span class="o">=&lt;/span>&lt;span class="m">2&lt;/span> -fexceptions -fstack-protector --param&lt;span class="o">=&lt;/span>ssp-buffer-size&lt;span class="o">=&lt;/span>&lt;span class="m">4&lt;/span> -grecord-gcc-switches -m64 -mtune&lt;span class="o">=&lt;/span>generic -Wa,--noexecstack -DPURIFY -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_MONT5 -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DAES_ASM -DVPAES_ASM -DBSAES_ASM -DWHIRLPOOL_ASM -DGHASH_ASM
&lt;span class="ln">13&lt;/span>OPENSSLDIR: &lt;span class="s2">&amp;#34;/etc/pki/tls&amp;#34;&lt;/span>
&lt;span class="ln">14&lt;/span>engines: dynamic
&lt;span class="ln">15&lt;/span>
&lt;span class="ln">16&lt;/span>&lt;span class="c1"># Generate hashed passwords (for example, for Anaconda)&lt;/span>
&lt;span class="ln">17&lt;/span>openssl passwd -1 mysecretword
&lt;span class="ln">18&lt;/span>&lt;span class="nv">$1$utlS7bht$VLMQrtHnPU0mkSO&lt;/span>/Kpzh/.
&lt;span class="ln">19&lt;/span>
&lt;span class="ln">20&lt;/span>&lt;span class="c1"># Directory complied in and used to search for openSSL files (--openssldir)&lt;/span>
&lt;span class="ln">21&lt;/span>openssl version -d
&lt;span class="ln">22&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I tend to use commercial SSL certificates or ones from my company's internal CA. However, I found this text file in my home directory which I'm recording here for next time because it's a very easy quick reference for generating a self signed certificate:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln"> 1&lt;/span>&lt;span class="c1"># Generate new private key&lt;/span>
&lt;span class="ln"> 2&lt;/span>openssl genrsa -aes256 -out my.key &lt;span class="m">4096&lt;/span>
&lt;span class="ln"> 3&lt;/span>
&lt;span class="ln"> 4&lt;/span>&lt;span class="c1"># Generate new certificate request&lt;/span>
&lt;span class="ln"> 5&lt;/span>openssl req -new -key my.key -out my.csr
&lt;span class="ln"> 6&lt;/span>
&lt;span class="ln"> 7&lt;/span>&lt;span class="c1"># Sign certificate&lt;/span>
&lt;span class="ln"> 8&lt;/span>openssl x509 -req -days &lt;span class="m">3650&lt;/span> -in my.csr -signkey my.key -out my.crt
&lt;span class="ln"> 9&lt;/span>
&lt;span class="ln">10&lt;/span>&lt;span class="c1"># Remove cert password&lt;/span>
&lt;span class="ln">11&lt;/span>openssl rsa -in my.key -out my.key
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Mirror a Remote Directory over HTTP</title><link>https://purplecarrot.co.uk/2014/01/25/mirror-remote-directory-over-http/</link><pubDate>Sat, 25 Jan 2014 16:07:00 +0000</pubDate><guid>https://purplecarrot.co.uk/2014/01/25/mirror-remote-directory-over-http/</guid><description>
&lt;p>Different ways to mirror a remote directory:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>wget -r --no-parent http://server/location
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If there are any files you don't want you can add the --reject option: &amp;lt;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>wget -r --no-parent --reject&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;tmp*&amp;#34;&lt;/span> http://server/location
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="ln">1&lt;/span>&lt;span class="n">curl&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Configuring Out-Of-Band Management Interface from In-Band Server</title><link>https://purplecarrot.co.uk/2013/10/11/configuring-out-of-band-management/</link><pubDate>Fri, 11 Oct 2013 16:43:00 +0100</pubDate><guid>https://purplecarrot.co.uk/2013/10/11/configuring-out-of-band-management/</guid><description>
&lt;p>Most modern x86 servers include &lt;a href="http://en.wikipedia.org/wiki/Out-of-band_management">out-of-band&lt;/a> Management or Lights-out Management systems. These systems offer remote configuration and remote console access to a headless server normally located in a datacenter. These are typically used when first setting up a server, or perhaps when the server is hosed. The company I work for is large enough to have dedicated server operators, and in my role I rarely if ever need to access the consoles of real devices. However, I recently needed to get to the console of a device and the server was in a different continent and timezone and I couldn't access the IP address I'd been emailed :( Not a good start to the day. I remember using ipmitool to configure OOB management before, but of course I never wrote down what I did then. As this blog is really a note taking memory aid system, I'm writing it down for next time. So using ipmitool I was able to determine the IP address of the server.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln"> 1&lt;/span>ipmiserver# ipmitool -I open lan print &lt;span class="m">1&lt;/span>
&lt;span class="ln"> 2&lt;/span>Set in Progress : Set Complete
&lt;span class="ln"> 3&lt;/span>Auth Type Support : NONE MD2 MD5 PASSWORD
&lt;span class="ln"> 4&lt;/span>Auth Type Enable : Callback :
&lt;span class="ln"> 5&lt;/span> : User : MD2 MD5 PASSWORD
&lt;span class="ln"> 6&lt;/span> : Operator : MD2 MD5 PASSWORD
&lt;span class="ln"> 7&lt;/span> : Admin : MD5
&lt;span class="ln"> 8&lt;/span> : OEM :
&lt;span class="ln"> 9&lt;/span>IP Address Source : Static Address
&lt;span class="ln">10&lt;/span>IP Address : 192.168.1.1
&lt;span class="ln">11&lt;/span>Subnet Mask : 255.255.255.0
&lt;span class="ln">12&lt;/span>MAC Address : 00:00:00:00:00:00
&lt;span class="ln">13&lt;/span>SNMP Community String : public
&lt;span class="ln">14&lt;/span>IP Header : &lt;span class="nv">TTL&lt;/span>&lt;span class="o">=&lt;/span>0x40 &lt;span class="nv">Flags&lt;/span>&lt;span class="o">=&lt;/span>0x40 &lt;span class="nv">Precedence&lt;/span>&lt;span class="o">=&lt;/span>0x00 &lt;span class="nv">TOS&lt;/span>&lt;span class="o">=&lt;/span>0x10
&lt;span class="ln">15&lt;/span>BMC ARP Control : ARP Responses Enabled, Gratuitous ARP Disabled
&lt;span class="ln">16&lt;/span>Gratituous ARP Intrvl : 2.0 seconds
&lt;span class="ln">17&lt;/span>Default Gateway IP : 192.168.1.254
&lt;span class="ln">18&lt;/span>Default Gateway MAC : 00:00:00:00:00:00
&lt;span class="ln">19&lt;/span>Backup Gateway IP : 0.0.0.0
&lt;span class="ln">20&lt;/span>Backup Gateway MAC : 00:00:00:00:00:00
&lt;span class="ln">21&lt;/span>802.1q VLAN ID : Disabled
&lt;span class="ln">22&lt;/span>802.1q VLAN Priority : &lt;span class="m">0&lt;/span>
&lt;span class="ln">23&lt;/span>RMCP+ Cipher Suites : 0,1,2,3,4
&lt;span class="ln">24&lt;/span>Cipher Suite Priv Max : XaaaaXXXXXXXXXX
&lt;span class="ln">25&lt;/span> : &lt;span class="nv">X&lt;/span>&lt;span class="o">=&lt;/span>Cipher Suite Unused
&lt;span class="ln">26&lt;/span> : &lt;span class="nv">c&lt;/span>&lt;span class="o">=&lt;/span>CALLBACK
&lt;span class="ln">27&lt;/span> : &lt;span class="nv">u&lt;/span>&lt;span class="o">=&lt;/span>USER
&lt;span class="ln">28&lt;/span> : &lt;span class="nv">o&lt;/span>&lt;span class="o">=&lt;/span>OPERATOR
&lt;span class="ln">29&lt;/span> : &lt;span class="nv">a&lt;/span>&lt;span class="o">=&lt;/span>ADMIN
&lt;span class="ln">30&lt;/span> : &lt;span class="nv">O&lt;/span>&lt;span class="o">=&lt;/span>OEM
&lt;span class="ln">31&lt;/span>ipmiserver#
&lt;/code>&lt;/pre>&lt;/div>&lt;p>From this I noticed that the default gateway for the out-of-band was incorrect (as with all blog posts, the IPs are changed to RFC1918 private addresses here). What must have happen is that the server installation engineer had used a screen and keyboard on a trolley to configure the server, and then probably tested it from a device on the same subnet (I'm being generous here, as he/she may have never bothered testing it!) Anyway, quick man ipmitool for syntax and this was easily fixed from the in-band server with the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="ln">1&lt;/span>ipmitool -I open lan set 1 defgw ipaddr 192.168.1.1
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Determining the IP Address of a Server's Out of Band Management</title><link>https://purplecarrot.co.uk/2013/10/11/determining-ip-address-of-servers-out/</link><pubDate>Fri, 11 Oct 2013 16:11:00 +0100</pubDate><guid>https://purplecarrot.co.uk/2013/10/11/determining-ip-address-of-servers-out/</guid><description>
&lt;p>Nearly all enterprise x86 servers include an &lt;a href="http://en.wikipedia.org/wiki/Out-of-band_management">out-of-band management interface&lt;/a> such as &lt;a href="http://en.wikipedia.org/wiki/HP_Integrated_Lights-Out">HP iLO&lt;/a>, &lt;a href="http://en.wikipedia.org/wiki/IBM_Remote_Supervisor_Adapter">IBM RSA&lt;/a> or &lt;a href="http://en.wikipedia.org/wiki/Baseboard_Management_Controller#Baseboard_management_controller">BMC&lt;/a>, &lt;a href="http://en.wikipedia.org/wiki/Intelligent_Platform_Management_Interface">IPMI&lt;/a>, Dell DRAC, etc. These are used for remotely power cycling, monitoring and what the data centre ops guys, confusingly for me, call KVM access (that's Keyboard Video Mouse not Kernel Virtual Machine!)&lt;/p>
&lt;p>As shown in {{ site.baseurl }}{% post_url 2013-10-11-configuring-out-of-band-management %}
this post, finding out the IP of the Out-of-Band Management interface from the &amp;quot;in-band&amp;quot; server is at times very useful. Here is the quick reference way to find that out from the Linux command line for popular OOBs:&lt;/p>
&lt;p>&lt;strong>HP iLO&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>hpserver:~# hponcfg -a -w ilosettings.xml
&lt;span class="ln">2&lt;/span>HP Lights-Out Online Configuration utility
&lt;span class="ln">3&lt;/span>Version 4.0.0 Date 12/08/2011 &lt;span class="o">(&lt;/span>c&lt;span class="o">)&lt;/span> Hewlett-Packard Company, &lt;span class="m">2011&lt;/span>
&lt;span class="ln">4&lt;/span>Firmware &lt;span class="nv">Revision&lt;/span> &lt;span class="o">=&lt;/span> 1.29 Device &lt;span class="nb">type&lt;/span> &lt;span class="o">=&lt;/span> iLO &lt;span class="m">2&lt;/span> Driver &lt;span class="nv">name&lt;/span> &lt;span class="o">=&lt;/span> hpilo
&lt;span class="ln">5&lt;/span>Management Processor configuration is successfully written to file &lt;span class="s2">&amp;#34;ilosettings.xml&amp;#34;&lt;/span>
&lt;span class="ln">6&lt;/span>hpserver:~# grep &lt;span class="s2">&amp;#34;&amp;lt;IP_ADDRESS VALUE&amp;#34;&lt;/span> ilosettings.xml
&lt;span class="ln">7&lt;/span> &amp;lt;IP_ADDRESS &lt;span class="nv">VALUE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;192.168.1.1&amp;#34;&lt;/span>&amp;gt;
&lt;span class="ln">8&lt;/span>hpserver:~#
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>IPMI&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln"> 1&lt;/span>ipmiserver# ipmitool -I open lan print &lt;span class="m">1&lt;/span>
&lt;span class="ln"> 2&lt;/span>Set in Progress : Set Complete
&lt;span class="ln"> 3&lt;/span>Auth Type Support : NONE MD2 MD5 PASSWORD
&lt;span class="ln"> 4&lt;/span>Auth Type Enable : Callback :
&lt;span class="ln"> 5&lt;/span> : User : MD2 MD5 PASSWORD
&lt;span class="ln"> 6&lt;/span> : Operator : MD2 MD5 PASSWORD
&lt;span class="ln"> 7&lt;/span> : Admin : MD5
&lt;span class="ln"> 8&lt;/span> : OEM :
&lt;span class="ln"> 9&lt;/span>IP Address Source : Static Address
&lt;span class="ln">10&lt;/span>IP Address : 192.168.1.1
&lt;span class="ln">11&lt;/span>Subnet Mask : 255.255.255.0
&lt;span class="ln">12&lt;/span>MAC Address : 00:00:00:00:00:00
&lt;span class="ln">13&lt;/span>SNMP Community String : public
&lt;span class="ln">14&lt;/span>IP Header : &lt;span class="nv">TTL&lt;/span>&lt;span class="o">=&lt;/span>0x40 &lt;span class="nv">Flags&lt;/span>&lt;span class="o">=&lt;/span>0x40 &lt;span class="nv">Precedence&lt;/span>&lt;span class="o">=&lt;/span>0x00 &lt;span class="nv">TOS&lt;/span>&lt;span class="o">=&lt;/span>0x10
&lt;span class="ln">15&lt;/span>BMC ARP Control : ARP Responses Enabled, Gratuitous ARP Disabled
&lt;span class="ln">16&lt;/span>Gratituous ARP Intrvl : 2.0 seconds
&lt;span class="ln">17&lt;/span>Default Gateway IP : 192.168.1.254
&lt;span class="ln">18&lt;/span>Default Gateway MAC : 00:00:00:00:00:00
&lt;span class="ln">19&lt;/span>Backup Gateway IP : 0.0.0.0
&lt;span class="ln">20&lt;/span>Backup Gateway MAC : 00:00:00:00:00:00
&lt;span class="ln">21&lt;/span>802.1q VLAN ID : Disabled
&lt;span class="ln">22&lt;/span>802.1q VLAN Priority : &lt;span class="m">0&lt;/span>
&lt;span class="ln">23&lt;/span>RMCP+ Cipher Suites : 0,1,2,3,4
&lt;span class="ln">24&lt;/span>Cipher Suite Priv Max : XaaaaXXXXXXXXXX
&lt;span class="ln">25&lt;/span> : &lt;span class="nv">X&lt;/span>&lt;span class="o">=&lt;/span>Cipher Suite Unused
&lt;span class="ln">26&lt;/span> : &lt;span class="nv">c&lt;/span>&lt;span class="o">=&lt;/span>CALLBACK
&lt;span class="ln">27&lt;/span> : &lt;span class="nv">u&lt;/span>&lt;span class="o">=&lt;/span>USER
&lt;span class="ln">28&lt;/span> : &lt;span class="nv">o&lt;/span>&lt;span class="o">=&lt;/span>OPERATOR
&lt;span class="ln">29&lt;/span> : &lt;span class="nv">a&lt;/span>&lt;span class="o">=&lt;/span>ADMIN
&lt;span class="ln">30&lt;/span> : &lt;span class="nv">O&lt;/span>&lt;span class="o">=&lt;/span>OEM
&lt;span class="ln">31&lt;/span>ipmiserver#
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Broadband External IP Address from Command Line</title><link>https://purplecarrot.co.uk/2013/09/16/broadband-external-ip-address-from/</link><pubDate>Mon, 16 Sep 2013 09:04:00 +0100</pubDate><guid>https://purplecarrot.co.uk/2013/09/16/broadband-external-ip-address-from/</guid><description>
&lt;p>Just typing &amp;quot;What is my external ip address&amp;quot; into Google is normally the most convenient way to find your external public IP address when you're behind a NAT'd broadband connection. The site ipconfig.me offers an alternative and clean way to get it from the command line, for example for use in a shell script:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>server# curl ifconfig.me
&lt;span class="ln">2&lt;/span>132.231.56.65
&lt;span class="ln">3&lt;/span>server# curl ifconfig.me/host
&lt;span class="ln">4&lt;/span>132-231-56-65.myisp.com
&lt;span class="ln">5&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>They have a range of options to return IP, Hostname, UserAgent, etc. The one I may be using is ifconfig.me/all.json or all.xml, to make it even easier to read into a Perl or Python script!&lt;/p></description></item><item><title>Getting VIM Powerline Working with Putty</title><link>https://purplecarrot.co.uk/2013/09/09/getting-vim-powerline-working-with-putty/</link><pubDate>Mon, 09 Sep 2013 22:06:00 +0100</pubDate><guid>https://purplecarrot.co.uk/2013/09/09/getting-vim-powerline-working-with-putty/</guid><description>
&lt;p>After using vim and vi for more years than I care to remember, I came across the &lt;a href="https://github.com/Lokaltog/powerline">vim powerline plugin&lt;/a> for the first time today. What an excellent vim statusline, and now I've been using it myself, I can see why it's so popular (that's a relative term - as in popular for a vim extensions! )&lt;/p>
&lt;p>Following the &lt;a href="https://powerline.readthedocs.org/en/latest/installation/linux.html#installation-linux">installation documentation&lt;/a>, and thanks to &lt;a href="Pathogen">Pathogen&lt;/a> it was very straight forward to setup. After installation in my bundle directory, I simply switched Putty to UTF-8 and then added the following lines to my .vimrc&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>&lt;span class="nb">set&lt;/span> &lt;span class="nv">rtp&lt;/span>&lt;span class="o">+=&lt;/span>~/.vim/bundle/powerline/powerline/bindings/vim
&lt;span class="ln">2&lt;/span>&lt;span class="nb">set&lt;/span> &lt;span class="nv">encoding&lt;/span>&lt;span class="o">=&lt;/span>utf-8
&lt;span class="ln">3&lt;/span>&lt;span class="nb">set&lt;/span> &lt;span class="nv">laststatus&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">2&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>..and then it was all working nicely in Linux gnome-terminal.&lt;/p>
&lt;p>However, when I came to using the same setup with Putty from Windows 7 machine (I have no choice, the firm I work for doesn't allow connection of a non-firm owned device to the network, so no connecting my Mac or Linux laptop here!), the character set was all screwed up. This is because powerline uses custom glyphs in the status bar and the MS Win 7 supplied Consolas font doesn't include those glyphs.&lt;/p>
&lt;p>Unfortunately, my Win 7 machine doesn't have a full development environment, so &lt;a href="https://powerline.readthedocs.org/en/latest/fontpatching.html">fontpatching&lt;/a> the Consolas font I use (as instructed to do in Linux/Mac OS X) was not an [easy] option. Luckily, I found there were already Consolas patched fonts around other people had made available. I first tried &lt;a href="https://github.com/Lokaltog/powerline-fonts/blob/master/Inconsolata/Inconsolata%20for%20Powerline.otf">Inconsolata for Powerline&lt;/a> as this was what's in the powerline repo and what the server and my Linux workstation used, but though fine in Linux, that just didn't look pretty in Putty. Next, I found posts referencing these &lt;a href="https://github.com/eugeneching/consolas-powerline-vim">patched Consolas&lt;/a> fonts, but after installation, it still wasn't displaying the correct characters. Being a bit of a vim plugin amateur, I checked and double-checked settings but to no avail.&lt;/p>
&lt;p>Then I came across some comments about the new (rewritten in Python) powerline plugin not using the same codes as the old powerline. By this time, I just wanted it working. This was one of those slight 10min deviations that was making me forget what I was originally doing. Enter cut and paste and the perl one-liner.&lt;/p>
&lt;p>I used charmap to lookup the UTF-8 character codes, and then printed them to the terminal. Yippee! This at least confirmed my terminal, fonts and putty were correctly setup to display the characters, so the problem wasn't in either of these areas. So I looked at the default powerline config.json, and confirmed that it wasn't displaying the characters I was expecting to see. So next I &lt;a href="https://powerline.readthedocs.org/en/latest/configuration.html">configured a local config.json&lt;/a>
and simply cut and paste the characters output from the perl one-liner and pasted them into the config.json in my home directory.&lt;/p>
&lt;p>And voila...a working vim powerline plugin on Linux from Putty on Win7. Now I know this is not the right solution, and normally curiosity would force me get to the bottom of this and understand what was wrong, but having already spent an hr reading about the plugin and comments and dead ends refering to the old non-python version of the plugin, this got me a working powerline in Windows and so I'm happy with that. I just had to have those cute triangles in my menu bar - and no, ugly chars was not an option :-)&lt;/p>
&lt;p>Getting SyntaxHighlighter to display these glyphs is certainly not something I want to spend 2 minutes investigating at the moment, so instead a screenshot of the perl one-liner and the changes to config.json:&lt;/p>
&lt;p>&lt;img src="https://purplecarrot.co.uk/images/posts/powerlineputty.png" alt="Glyph icons">&lt;/p></description></item><item><title>Integrated Web Serving with BaseHTTPServer</title><link>https://purplecarrot.co.uk/2013/08/16/these-last-few-days-i-have-been-writing/</link><pubDate>Fri, 16 Aug 2013 17:49:00 +0100</pubDate><guid>https://purplecarrot.co.uk/2013/08/16/these-last-few-days-i-have-been-writing/</guid><description>
&lt;p>These last few days I have been writing a command line reporting program at work. For Linux techs, formatted terminal output works great and is actually their preferred view. However, for managers, you simple must have the eye candy of a GUI. Normally in these situations, I would simply add CGI code and then bundle a simple Apache config to &lt;em>Include&lt;/em> along with the code. With this particular program, it could be run on any one of tens of thousands of servers we have, however it is only likely to be run for a short while to graphically review some data stored in JSON files on the server. The overhead of reconfiguring and restarting Apache, even though only a few commands, is probably too much in this particular scenario.&lt;/p>
&lt;p>Enter &lt;a href="http://docs.python.org/2/library/basehttpserver.html">BaseHTTPServer&lt;/a>. This includes classes that let your program become the webserver itself, negating the need to run a CGI script or framework under full blown Apache.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="ln"> 1&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="nc">MyWebServer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">BaseHTTPServer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">BaseHTTPRequestHandler&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln"> 2&lt;/span>
&lt;span class="ln"> 3&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">do_HEAD&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">send_response&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">200&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">send_header&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Content-type&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;text/html&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">end_headers&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln"> 7&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">do_GET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">send_response&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">200&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">send_header&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Content-type&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;text/html&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">end_headers&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">wfile&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Web Page&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">14&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">wfile&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">show_table&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="n">reportjson&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s1">/&lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">rootdir&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">wfile&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">show_table&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="ln">20&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="k">except&lt;/span> &lt;span class="ne">IOError&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">22&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">send_error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">404&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;Oops: &lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="ln">23&lt;/span>
&lt;span class="ln">24&lt;/span>
&lt;span class="ln">25&lt;/span>&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">26&lt;/span> &lt;span class="n">httpd&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">BaseHTTPServer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">HTTPServer&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="s1">&amp;#39;0.0.0.0&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2000&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="n">MyWebServer&lt;/span>
&lt;span class="ln">27&lt;/span>
&lt;span class="ln">28&lt;/span> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">29&lt;/span> &lt;span class="n">httpd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">serve_forever&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln">30&lt;/span>
&lt;span class="ln">31&lt;/span> &lt;span class="k">except&lt;/span> &lt;span class="ne">KeyboardInterrupt&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="ln">32&lt;/span> &lt;span class="k">pass&lt;/span>
&lt;span class="ln">33&lt;/span> &lt;span class="n">httpd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">server_close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="ln">34&lt;/span>
&lt;span class="ln">35&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">html&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now, this obviously isn't going to replace your Apache installation (though I came across bugs in BaseHTTPServer where people were seemingly trying to!) but for development purposes and short lived web serving without affecting the running Apache server on your server, this is a very useful feature I am sure I will be using time and time again.&lt;/p></description></item><item><title>Who logs in the most?</title><link>https://purplecarrot.co.uk/2011/05/16/who-logs-in-most/</link><pubDate>Mon, 16 May 2011 22:01:00 +0100</pubDate><guid>https://purplecarrot.co.uk/2011/05/16/who-logs-in-most/</guid><description>
&lt;p>I work in a firm with 10s of 1000s of Linux servers. A colleague had been emailed a list of servers and was trying to find out who owned them. At first, I suggested running last to see who last logged in but we realised this probably wasn't the best way to start the hunt. On reflection, the was a high chance that the user who logged in the &lt;em>most&lt;/em> frequently into the server, was the the owner of that server. Or if not, he would most likely know the owner ;-)&lt;/p>
&lt;p>So I used this 30 second one liner (wrapped for viewability) to list most frequent users:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-perl" data-lang="perl">&lt;span class="ln"> 1&lt;/span>&lt;span class="nv">$&lt;/span> &lt;span class="nv">last&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">perl&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">lane&lt;/span> &lt;span class="s">&amp;#39;$users{$F[0]}++; END {
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="s">foreach $u (reverse sort { $users{$a} &amp;lt;=&amp;gt; $users{b} } keys %users)
&lt;/span>&lt;span class="ln"> 3&lt;/span>&lt;span class="s">{ print &amp;#34;$u logged in $users{$u} times&amp;#34;; } }&amp;#39;&lt;/span>
&lt;span class="ln"> 4&lt;/span>&lt;span class="n">tom&lt;/span> &lt;span class="n">logged&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="mi">108&lt;/span> &lt;span class="nb">times&lt;/span>
&lt;span class="ln"> 5&lt;/span>&lt;span class="n">sally&lt;/span> &lt;span class="n">logged&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="mi">81&lt;/span> &lt;span class="nb">times&lt;/span>
&lt;span class="ln"> 6&lt;/span>&lt;span class="n">dave&lt;/span> &lt;span class="n">logged&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="mi">32&lt;/span> &lt;span class="nb">times&lt;/span>
&lt;span class="ln"> 7&lt;/span>&lt;span class="n">root&lt;/span> &lt;span class="n">logged&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="mi">27&lt;/span> &lt;span class="nb">times&lt;/span>
&lt;span class="ln"> 8&lt;/span>&lt;span class="n">richard&lt;/span> &lt;span class="n">logged&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="mi">8&lt;/span> &lt;span class="nb">times&lt;/span>
&lt;span class="ln"> 9&lt;/span>&lt;span class="n">admin&lt;/span> &lt;span class="n">logged&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="nb">times&lt;/span>
&lt;span class="ln">10&lt;/span>&lt;span class="n">wtmp&lt;/span> &lt;span class="n">logged&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="nb">times&lt;/span>
&lt;span class="ln">11&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>