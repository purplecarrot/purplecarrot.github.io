<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Purplecarrot</title>
    <link>https://purplecarrot.co.uk/tags/linux/</link>
    <description>Recent content in Linux on Purplecarrot</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sun, 19 Dec 2021 11:11:45 +0000</lastBuildDate><atom:link href="https://purplecarrot.co.uk/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting Along with the OpenShift Machine Config Operator</title>
      <link>https://purplecarrot.co.uk/post/2021-12-19-machineconfigoperator/</link>
      <pubDate>Sun, 19 Dec 2021 11:11:45 +0000</pubDate>
      
      <guid>https://purplecarrot.co.uk/post/2021-12-19-machineconfigoperator/</guid>
      <description>
        
          &lt;p&gt;When I&#39;m working with the Machine Config Operator (MCO) in OpenShift, and frequently typing &lt;code&gt;oc describe mcp&lt;/code&gt; and &lt;code&gt;oc get mcp&lt;/code&gt;, I&#39;m often reminded of the MCP (Machine Control Program) in the film &lt;a href=&#34;https://en.wikipedia.org/wiki/Tron&#34;&gt;Tron&lt;/a&gt;. I like the idea behind the MCO, and when it&#39;s working it&#39;s great, but perhaps this association in my mind is not only because of the shared acronym, but because you do sometimes feel you&#39;re fighting with it for control of your cluster!&lt;/p&gt;
&lt;h2 id=&#34;what-is-the-openshift-machine-config-operator&#34;&gt;What is the OpenShift Machine Config Operator?&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/openshift/machine-config-operator&#34;&gt;OpenShift Machine Config Operator&lt;/a&gt; is a very powerful piece of software and an important part of the OpenShift Container Platform (OCP). It manages the Operating System versions, updates and configuration files of the master and worker nodes that make up an OpenShift cluster. Operating system configuration files such as NetworkManager config files, systemd units, sysctl files as well as kubelet config files and certificate bundles, are base64 encoded and held in &lt;code&gt;MachineConfig&lt;/code&gt; resources inside Kubernetes itself.&lt;/p&gt;
&lt;p&gt;This might not sound that interesting in the context of today&#39;s public cloud service providers IaaS solutions, but when the nodes are running on HP and Dell bare metal physical servers in private disconnected data centres, having a software operator like this - which is run and managed using native Kubernetes primitives and commands - drastically reduces the SA workload required to manage and maintain multiple clusters made up of hundreds of bare metal physical servers&lt;/p&gt;
&lt;h2 id=&#34;understanding-the-machine-config-operator-mco&#34;&gt;Understanding the Machine Config Operator (MCO)&lt;/h2&gt;
&lt;p&gt;The MCO lives in the &lt;em&gt;openshift-machine-config-operator&lt;/em&gt; project and is present in every OpenShift cluster. There are a number of different containers running in this namespace:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;machine-config-operator&lt;/strong&gt; - this is the main controller loop or ClusterOperator itself that deploys and manages everything else in this namespace.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;machine-config-server&lt;/strong&gt; - provides the endpoint that nodes connect to in order to get their configuration files.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;machine-config-controller&lt;/strong&gt; - co-ordinates upgrades and manages the lifecycle of nodes in the cluster by rendering (generating) &lt;code&gt;MachineConfigs (mc)&lt;/code&gt;, managing &lt;code&gt;MachineConfigPools (mcp)&lt;/code&gt; and by co-ordinating with the &lt;em&gt;machine-config-daemon&lt;/em&gt; running on each node to keep all the nodes up to date with the correct configuration.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;machine-config-daemon&lt;/strong&gt; - responsible for updating nodes to a given &lt;code&gt;MachineConfig&lt;/code&gt; when requested to by the machine-config-controller. This runs as a DaemonSet so there is one pod per node in the cluster.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The terminal output below illustrates these pods running in the &lt;em&gt;openshift-machine-config-operator&lt;/em&gt; project in an OpenShift cluster:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;$ oc get pods -n openshift-machine-config-operator -o wide
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;NAME                                         READY   STATUS    RESTARTS   AGE   IP              NODE       NOMINATED NODE   READINESS GATES
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;machine-config-controller-7c4975f766-gbnh2   1/1     Running   1          20h   10.129.0.27     server01   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;machine-config-daemon-2kt5g                  2/2     Running   2          18h   192.162.1.203   server03   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;machine-config-daemon-jmhll                  2/2     Running   6          54d   192.168.1.206   server06   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;machine-config-daemon-rzwhv                  2/2     Running   6          54d   192.168.1.202   server02   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;machine-config-daemon-vqphs                  2/2     Running   24         54d   192.168.1.201   server01   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;machine-config-daemon-xqjgk                  2/2     Running   2          17h   192.168.1.205   server05   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;machine-config-operator-66f4cd998f-v8cfg     1/1     Running   1          20h   10.129.0.40     server01   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;machine-config-server-5hlsd                  1/1     Running   12         54d   192.168.1.101   server01   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;machine-config-server-dfvg8                  1/1     Running   3          54d   192.168.1.102   server02   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;machine-config-server-tr2fd                  1/1     Running   11         54d   192.168.1.103   server03   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;machineconfigs&#34;&gt;MachineConfigs&lt;/h2&gt;
&lt;p&gt;So how does an update or change to a systemd unit file used to start the kubelet on a node make it to the OS disk of a node that requires it?&lt;/p&gt;
&lt;p&gt;One of the core utilities underpinning the MCO is &lt;a href=&#34;https:/github.com/coreos/ignition&#34;&gt;Ignition&lt;/a&gt;. When RedHat acquired the CoreOS company in 2018, they merged the best parts of CoreOS, Red Hat Linux and Red Hat Atomic operating systems and the resulting product was named Red Hat CoreOS (RHCOS). This is the OS that runs on the master and worker nodes in an OpenShift cluster.&lt;/p&gt;
&lt;p&gt;All the OS configuration files a node requires are encoded and encapsulated in ignition files. The &lt;em&gt;machine-config-controller&lt;/em&gt; collates all these various snippets and OS configuration files each node requires, and then renders (generates) &lt;code&gt;MachineConfig&lt;/code&gt; kubernetes resources with all the files.&lt;/p&gt;
&lt;p&gt;The command below, shows the &lt;code&gt;MachineConfigs&lt;/code&gt; available in an OpenShift cluster:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;$ oc get mc --sort-by=&amp;#39;{.metadata.creationTimestamp}&amp;#39;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;NAME                                               GENERATEDBYCONTROLLER                      IGNITIONVERSION   AGE
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;99-worker-ssh                                                                                 3.2.0             216d
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;99-master-ssh                                                                                 3.2.0             216d
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;00-master                                          a537783ea4a0cd3b4fe2a02626ab27887307ea51   3.2.0             216d
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;01-master-kubelet                                  a537783ea4a0cd3b4fe2a02626ab27887307ea51   3.2.0             216d
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;01-worker-container-runtime                        a537783ea4a0cd3b4fe2a02626ab27887307ea51   3.2.0             216d
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;01-master-container-runtime                        a537783ea4a0cd3b4fe2a02626ab27887307ea51   3.2.0             216d
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;99-master-generated-registries                     a537783ea4a0cd3b4fe2a02626ab27887307ea51   3.2.0             216d
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;00-worker                                          a537783ea4a0cd3b4fe2a02626ab27887307ea51   3.2.0             216d
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;99-worker-generated-registries                     a537783ea4a0cd3b4fe2a02626ab27887307ea51   3.2.0             216d
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;01-worker-kubelet                                  a537783ea4a0cd3b4fe2a02626ab27887307ea51   3.2.0             216d
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;rendered-master-0a540fd2eb85335cab8066f0bb407d5b   116603ff3d7a39c0de52d7d16fe307c8471330a0   3.2.0             216d
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;rendered-worker-9da78a560e7fa3c0cbd53d2bf0c17941   116603ff3d7a39c0de52d7d16fe307c8471330a0   3.2.0             216d
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;rendered-master-248f9034db99de75517a88a2ae8d29e2   116603ff3d7a39c0de52d7d16fe307c8471330a0   3.2.0             215d
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;rendered-worker-e323d4623ccb8cb71a4953f4ca81f8a4   116603ff3d7a39c0de52d7d16fe307c8471330a0   3.2.0             215d
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;rendered-worker-5599b4631efd88b5834f0844bec5ce83   116603ff3d7a39c0de52d7d16fe307c8471330a0   3.2.0             203d
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;rendered-master-8e5868011cc53d9697ac9dda69a64b39   116603ff3d7a39c0de52d7d16fe307c8471330a0   3.2.0             203d
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;rendered-worker-77e79ef013b565633a4d04da28f7dda4   116603ff3d7a39c0de52d7d16fe307c8471330a0   3.2.0             203d
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;rendered-master-c40185b01423956d1146b7dea0a3e265   116603ff3d7a39c0de52d7d16fe307c8471330a0   3.2.0             203d
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;rendered-worker-dee67e9dc2ba77876de8bc8d045740dd   c76785d62cc28ddf3390c865c9e999a02248cd84   3.2.0             57d
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;rendered-master-3fcbbc2dcbddc79435994c98b655b192   c76785d62cc28ddf3390c865c9e999a02248cd84   3.2.0             57d
&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;rendered-worker-7373393797c4c7e5ae500ff51ba234a9   a537783ea4a0cd3b4fe2a02626ab27887307ea51   3.2.0             55d
&lt;span class=&#34;ln&#34;&gt;24&lt;/span&gt;rendered-master-40ad8d11cc05c7079ee8f3bfa6df5540   a537783ea4a0cd3b4fe2a02626ab27887307ea51   3.2.0             55d
&lt;span class=&#34;ln&#34;&gt;25&lt;/span&gt;rendered-worker-53656729c24a74935907c4fba2adc90a   a537783ea4a0cd3b4fe2a02626ab27887307ea51   3.2.0             54d
&lt;span class=&#34;ln&#34;&gt;26&lt;/span&gt;rendered-master-1e2f18449f36cad8c9618c264d5cdc10   a537783ea4a0cd3b4fe2a02626ab27887307ea51   3.2.0             54d
&lt;span class=&#34;ln&#34;&gt;27&lt;/span&gt;rendered-worker-82df13b281ba3ddb9ba2e8811ef7957c   a537783ea4a0cd3b4fe2a02626ab27887307ea51   3.2.0             14d
&lt;span class=&#34;ln&#34;&gt;28&lt;/span&gt;rendered-master-7ed9a47c85ff478b341adaa20a55e942   a537783ea4a0cd3b4fe2a02626ab27887307ea51   3.2.0             14d
&lt;span class=&#34;ln&#34;&gt;29&lt;/span&gt;rendered-master-98968a4a639e3efad0436d19d4a6c93f   a537783ea4a0cd3b4fe2a02626ab27887307ea51   3.2.0             14d
&lt;span class=&#34;ln&#34;&gt;30&lt;/span&gt;rendered-worker-65ec18c5a3e4ebbf5f8ef459fb3c50b2   a537783ea4a0cd3b4fe2a02626ab27887307ea51   3.2.0             14d
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this command output, you can see that 216 days ago when the cluster was first installed, initial &lt;code&gt;MachineConfigs&lt;/code&gt; were rendered - one for the master nodes (rendered-master-0a540f..) in the cluster, and one for the worker nodes (rendered-worker-9da78a...). Whilst these two &lt;code&gt;MachineConfigs&lt;/code&gt; share common OS configuration files, there are also lots of differences and so they are managed separately for each &lt;code&gt;MachineConfigPool&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Since the initial install, we can see at various intervals, new &lt;code&gt;MachineConfig&lt;/code&gt; objects were rendered by the &lt;em&gt;machine-config-controller&lt;/em&gt;. Each new rendered- &lt;code&gt;MachineConfig&lt;/code&gt; is from when upgrades were made to the OpenShift cluster (because an OpenShift update may have updated an OS setting in say &lt;code&gt;/etc/crio/crio.conf&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;As well as OCP version updates forcing updates, you can also manually edit &lt;code&gt;MachineConfigs&lt;/code&gt; to modify or add you own OS config files. For what it&#39;s worth, I did have to do this with early OpenShift 4.1/4.2 versions, where I modified NTP and SSHD config files for custom settings and to modify the ca-bundle.crt as a workaround as early versions had issues with private CAs. But since those early versions, I have not had need to make any changes - the MCO just manages the complete OS lifecycle of the node.&lt;/p&gt;
&lt;p&gt;When a new &lt;code&gt;MachineConfig&lt;/code&gt; is generated, the &lt;em&gt;machine-config-controller&lt;/em&gt; will work with the &lt;em&gt;machine-config-daemon&lt;/em&gt; running on each node to reboot it and have it apply the latest ignition configuration held within the &lt;code&gt;MachineConfig&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When a node boots Red Hat CoreOS, &lt;em&gt;ignition&lt;/em&gt; connects to the &lt;em&gt;machine-config-server&lt;/em&gt; endpoint &lt;code&gt;https://&amp;lt;cluster-api&amp;gt;:22623/config/master&lt;/code&gt; (or &lt;code&gt;/config/worker&lt;/code&gt; for worker nodes, or &lt;code&gt;/config/&amp;lt;machine-config-pool&amp;gt;&lt;/code&gt;) and applies the &lt;em&gt;Ignition&lt;/em&gt; config to the node.&lt;/p&gt;
&lt;h2 id=&#34;quick-health-check-of-mco&#34;&gt;Quick Health Check of MCO&lt;/h2&gt;
&lt;p&gt;Most of the time, the MCO works very well. However, as with any highly automated process, on occasions it does go wrong. The first thing to be aware of with MCO is that you have to keep a close eye on it, particularly when it&#39;s rolling out updates. At a high level, the quickest ways to do this is by looking at status of the the ClusterOperator&#39;s status:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;$ oc get co machine-config
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;NAME             VERSION   AVAILABLE   PROGRESSING   DEGRADED   SINCE
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;machine-config   4.8.10    True        False         False       14d
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here we can see that the MCO is &lt;strong&gt;AVAILABLE=True&lt;/strong&gt;. This is good, and you nearly always want to see this. If it&#39;s &lt;strong&gt;False&lt;/strong&gt;, something is very wrong with the cluster, or more likely perhaps, the cluster is in the middle of an OCP upgrade and the MCO pod is restarting on a different node.&lt;/p&gt;
&lt;p&gt;If &lt;strong&gt;PROGRESSING=False&lt;/strong&gt; is shown, that means that the MCO has no updates to rollout, and that the nodes in your cluster are all up to date and running on the latest OS version and using all the OS config files from the &lt;code&gt;MachineConfig&lt;/code&gt;. If this is set to &lt;strong&gt;False&lt;/strong&gt;, then that means the &lt;em&gt;machine-config-controller&lt;/em&gt; is busy working through an update and asking the &lt;em&gt;machine-config-daemons&lt;/em&gt; on each node to reboot the node and apply a &lt;code&gt;MachineConfig&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For a healthy MCO, you also want to see &lt;strong&gt;DEGRADED=False&lt;/strong&gt;. If you see this as &lt;strong&gt;True&lt;/strong&gt;, then your MCO has a problem that usually requires manual intervention, and some of the key reasons that I&#39;ve seen for this condition are documented below.&lt;/p&gt;
&lt;p&gt;As well as looking at the overview status of the &lt;code&gt;ClusterOperator&lt;/code&gt; resource, another way you can see the health of the MCO at a glance is to look at its &lt;code&gt;MachineConfigPools&lt;/code&gt;. In a healthy cluster, these pools will show &lt;strong&gt;UPDATED=True&lt;/strong&gt; and &lt;strong&gt;DEGRADED=False&lt;/strong&gt;. If &lt;strong&gt;UPDATING=True&lt;/strong&gt; is set, the &lt;em&gt;machine-config-controller&lt;/em&gt; is in the middle of rolling out an update:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;$ oc get mcp
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;NAME     CONFIG                                             UPDATED   UPDATING   DEGRADED   MACHINECOUNT   READYMACHINECOUNT   UPDATEDMACHINECOUNT   DEGRADEDMACHINECOUNT   AGE
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;master   rendered-master-98968a4a639e3efad0436d19d4a6c93f   True      False      False      3              3                   3                     0                      216d
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;worker   rendered-worker-53656729c24a74935907c4fba2adc90a   True      False      False      3              3                   3                     0                      216d
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;monitoring-an-mco-update&#34;&gt;Monitoring an MCO Update&lt;/h2&gt;
&lt;p&gt;If your MCO is updating (&lt;strong&gt;PROGRESSING=True&lt;/strong&gt;, &lt;strong&gt;UPDATING=True&lt;/strong&gt;), then you can monitor its progress by watching the logs of the &lt;em&gt;machine-config-controller&lt;/em&gt; pod.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;$ oc logs -l k8s-app=machine-config-controller -n openshift-machine-config-operator
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the logs from this pod, you&#39;ll see nodes in the cluster sequentially being cordoned (made &lt;code&gt;schedulable=False&lt;/code&gt;) and then rebooted. Whilst rebooting and applying the new configuration, they will be seen as &lt;code&gt;NotReady&lt;/code&gt; status in &lt;code&gt;oc get nodes&lt;/code&gt;).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;$ oc get nodes
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;NAME       STATUS                        ROLES           AGE    VERSION
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;server01   Ready                         master,worker   217d   v1.21.1+9807387
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;server02   NotReady,SchedulingDisabled   master,worker   217d   v1.21.1+9807387
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;server03   Ready                         master,worker   217d   v1.21.1+9807387
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;server04   NotReady,SchedulingDisabled   worker          203d   v1.21.1+9807387
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;server05   Ready                         worker          203d   v1.21.1+9807387
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If something happens when the node reboots (eg it fails to DHCP, it can&#39;t boot because of a disk or grub error, fails to start the kubelet), the MCO rollout process will halt. You&#39;ll notice this because the node stays &lt;code&gt;NotReady&lt;/code&gt; for longer than you&#39;d expect and the status will become &lt;em&gt;degraded&lt;/em&gt;. If this happens, you have to roll your sleeves up and work out why.&lt;/p&gt;
&lt;h2 id=&#34;troubleshooting-degraded-nodes&#34;&gt;Troubleshooting Degraded Nodes&lt;/h2&gt;
&lt;p&gt;The first place to look when troubleshooting a &lt;em&gt;degraded&lt;/em&gt; node is its machine-config-daemon pod. In early OpenShift 4.x versions, there were also occasions when the reason for a degraded node was only apparent by looking in the Linux journald logs on the node itself. However in recent versions, I&#39;ve not had to resort to journald logs because everything about an error has been available in the &lt;em&gt;machine-config-daemon&lt;/em&gt; pod logs for the node. To find the correct &lt;em&gt;machine-config-daemon&lt;/em&gt; pod for the node, you simply run &lt;code&gt;oc get pods -o wide&lt;/code&gt;, or alternatively you could cut and paste the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;$ MCDPOD=$(oc get pods -l k8s-app=machine-config-daemon -o jsonpath=&amp;#39;{.items[?(@.spec.nodeName==&amp;#34;server01&amp;#34;)].metadata.name&amp;#39;)
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;$ oc logs $MCDPOD -c machine-config-daemon
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next, lets look at a few common reasons for a node being degraded.&lt;/p&gt;
&lt;h3 id=&#34;unexpected-on-disk-state---content-mismatch-for-file&#34;&gt;Unexpected on-disk state - content mismatch for file&lt;/h3&gt;
&lt;p&gt;If the files on a node&#39;s disk that are under control of the &lt;code&gt;MachineConfig&lt;/code&gt; don&#39;t match the contents of those same files as specified in that &lt;code&gt;MachineConfig&lt;/code&gt; (ie the &lt;code&gt;MachineConfig&lt;/code&gt; specified in the node&#39;s &lt;code&gt;machineconfiguration.openshift.io/currentConfig&lt;/code&gt; annotation), then the &lt;em&gt;machine-config-daemon&lt;/em&gt; will refuse to apply the update and this will put the &lt;code&gt;MachineConfigPool&lt;/code&gt; into a degraded state. You&#39;ll see a message event similar to this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;Type:                  RenderDegraded
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;Message:               Node server01 is reporting: &amp;#34;unexpected on-disk state validating against rendered-worker-82df13b281ba3ddb9ba2e8811ef7957c: content mismatch for file \&amp;#34;/etc/kubernetes/kubelet.conf\&amp;#34;&amp;#34;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;Reason:                1 nodes are reporting degraded status on sync
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;Status:                True
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;Type:                  NodeDegraded
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This happens when somebody has manually edited a file on a node. Although remember, there should be no reason or need for a sysadmin (SA) to edit files on RHCOS, but sometimes junior SAs or SAs not familiar with OpenShift might be tempted to edit OS config files using ssh/vim.&lt;/p&gt;
&lt;p&gt;You can get an indication of this by looking at the &lt;code&gt;machineconfiguration.openshift.io/ssh&lt;/code&gt; annotation on the node. If this is set to accessed, then a SA has ssh&#39;d onto the node and could have perhaps changed something manually. Ordinarily (except see troubleshooting below), SA shouldn&#39;t be ssh&#39;ing onto RHCOS nodes.&lt;/p&gt;
&lt;p&gt;The easiest way to quickly fix this is to restore the config file from the &lt;code&gt;MachineConfig&lt;/code&gt;. To do this, output the correct &lt;code&gt;MachineConfig&lt;/code&gt; in full YAML, and then search for the path entry for the file being reported as having a content mismatch. Alternatively, copy and run the following commands to get the file contents:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;$ CURRENT_CONFIG=$(oc get node -o jsonpath=&amp;#34;{.items[?(@.metadata.name==&amp;#39;server01&amp;#39;)].metadata.annotations[&amp;#39;machineconfiguration\.openshift\.io/currentConfig&amp;#39;]}&amp;#34;)
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;$ oc get mc $CURRENT_CONFIG -o jsonpath=&amp;#34;{.spec.config.storage.files[?(@.path==&amp;#39;/etc/kubernetes/kubelet.conf)].contents.source}&amp;#34; &amp;gt; newkubelet.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then you simply base64 decode (or urldecode) the file, and scp it back onto the degraded node in the correct location. This will overwrite the manual changes made to the file and restore it to what the MCO wants it to be. The MCO should then pick up that the &lt;code&gt;MachineConfig&lt;/code&gt; now matches, and continue progressing with what it was doing.&lt;/p&gt;
&lt;h3 id=&#34;error-running-rpm-ostree&#34;&gt;Error running rpm-ostree&lt;/h3&gt;
&lt;p&gt;Red Hat CoreOS uses something called &lt;a href=&#34;&#34;&gt;rpm-ostree&lt;/a&gt; which is a &lt;em&gt;&amp;quot;hybrid image/package system&amp;quot;&lt;/em&gt;. It&#39;s basically an archive file that contain all the Linux software package (RPMS) that CoreOS requires and allows atomic upgrades (and downgrades) by being able to pivot between them. Sometimes this fails, and the node will become degraded. I&#39;ve seen this fail for a couple of reasons - once with an issue where the node was unable to download an image from quay.io, and another time when a third party vendor (who wasn&#39;t familiar with how rpm-ostrees and Red Hat CoreOS worked) set the immutable ACL attribute on some of its files on the node, causing the node to fail drastically on each OS upgrade. The vendor has since removed these custom ACLs from their product after our experience.&lt;/p&gt;
&lt;p&gt;The best way to fix this, if you can, is to correct the issue breaking the pivot. For example, by removing the immutable ACL on a system file. The Linux systemd journal on the node should help with identifying the error. If you still can&#39;t fix it, the last resort to fix this issue is to force a pivot.&lt;/p&gt;
&lt;h3 id=&#34;forcing-a-pivot&#34;&gt;Forcing a Pivot&lt;/h3&gt;
&lt;p&gt;If you can&#39;t get the node to update, you&#39;ll have to force it. To do this, you connect to the node and run the &lt;code&gt;machine-config-daemon pivot&lt;/code&gt; command with the correct OS image SHA (find this from the errors in the logs to be sure you get the correct one!)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;$ oc debug node/server01
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;Starting pod/server01-debug ...
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;To use host binaries, run `chroot /host`
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;Pod IP: 192.168.1.201
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;If you don&amp;#39;t see a command prompt, try pressing enter.
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;# sh-4.4
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;# chroot /host
&lt;span class=&#34;ln&#34;&gt;8&lt;/span&gt;# /run/bin/machine-config-daemon pivot &amp;#34;quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:aaaabbbbccccdddd&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;forcing-a-node-to-use-a-specific-machineconfig&#34;&gt;Forcing a Node to Use a Specific MachineConfig&lt;/h3&gt;
&lt;p&gt;As a last resort - and experience has shown it really is better to address any MCO issues in other ways before doing this - you can force a node to reboot and use a different &lt;code&gt;MachineConfig&lt;/code&gt;. This is done by manually editing the machineconfiguration annotations on the Node object itself.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;oc patch node server01 --type merge --patch &amp;#39;{&amp;#34;metadata&amp;#34;: {&amp;#34;annotations&amp;#34;: {&amp;#34;machineconfiguration.openshift.io/currentConfig&amp;#34;: &amp;#34;render-worker-52656729c24a7493&amp;#34;}}}&amp;#39;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;oc patch node server01 --type merge --patch &amp;#39;{&amp;#34;metadata&amp;#34;: {&amp;#34;annotations&amp;#34;: {&amp;#34;machineconfiguration.openshift.io/desiredConfig&amp;#34;: &amp;#34;render-worker-52656729c24a7493&amp;#34;}}}&amp;#39;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;oc patch node server01 --type merge --patch &amp;#39;{&amp;#34;metadata&amp;#34;: {&amp;#34;annotations&amp;#34;: {&amp;#34;machineconfiguration.openshift.io/reason&amp;#34;: &amp;#34;&amp;#34;}}}&amp;#39;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;oc patch node server01 --type merge --patch &amp;#39;{&amp;#34;metadata&amp;#34;: {&amp;#34;annotations&amp;#34;: {&amp;#34;machineconfiguration.openshift.io/state&amp;#34;: &amp;#34;Done&amp;#34;}}}&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then you have to connect to the node and touch a machine-config-daemon-force file. This will trigger the &lt;em&gt;machine-config-daemon&lt;/em&gt; to do a reboot and to force the update to the &lt;code&gt;MachineConfig&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;$ oc debug node/server01
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;[root@server01 core] chroot /host
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;[root@server01 core] touch /run/machine-config-daemon-force
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On occasion, you might not be able to connect to the node using an oc debug pod. I&#39;ve seen this happen when a systemd unit running podman early in the boot process has had an image pull failure, and the debug pod is also not able to run when kubelet is not running properly, mean SSH is the only option.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;$ ssh core@server01
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;[root@server01 core] touch /run/machine-config-daemon-force
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;pausing-mco-updates&#34;&gt;Pausing MCO Updates&lt;/h2&gt;
&lt;p&gt;As described above, the MCO will automatically carry on the work of rebooting and managing your nodes if you let it. This is great, but does mean that nodes in the cluster can sometimes be rebooted without warning. Of course, true cloud-native Kubernetes ready applications should be running multiple replicas across nodes anyway, and this shouldn&#39;t normally be a problem.&lt;/p&gt;
&lt;p&gt;However, should you wish to pause the MCO so that it doesn&#39;t automatically reboot nodes when you don&#39;t want it to, you can &amp;quot;pause&amp;quot; the worker pools by setting the &lt;code&gt;.spec.paused&lt;/code&gt; field in the &lt;code&gt;MachineConfigPool&lt;/code&gt;. For example, by running the following patch commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;$ oc patch mcp master --type merge --patch &amp;#39;{&amp;#34;spec&amp;#34;:{&amp;#34;paused&amp;#34;: true}}&amp;#39;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;$ oc patch mcp worker --type merge --patch &amp;#39;{&amp;#34;spec&amp;#34;:{&amp;#34;paused&amp;#34;: true}}&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It should be noted that you shouldn&#39;t leave the &lt;code&gt;MachineConfigPool&#39;s&lt;/code&gt; paused for long periods of times. This can cause issues for MCO if configuration updates combine with cluster cert rotation events. However, pausing them whilst the actual OCP control plane upgrade happens and then unpausing when you&#39;re ready for all the nodes to be rebooted can be very useful.&lt;/p&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;The Machine Config Operator is a clever piece of software that significantly reduces workload of running and managing nodes in an OpenShift cluster. However, it&#39;s important for cluster administrators to understand how it works, and to be able to successfully recover it when any issues arise and it becomes degraded. Hopefully, this blog post will help you understand it a little better and to resolve any issues you encounter.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Breaking into your OpenShift Cluster</title>
      <link>https://purplecarrot.co.uk/post/2021-10-30-breaking_into_your_openshift_cluster/</link>
      <pubDate>Sat, 30 Oct 2021 11:04:12 +0000</pubDate>
      
      <guid>https://purplecarrot.co.uk/post/2021-10-30-breaking_into_your_openshift_cluster/</guid>
      <description>
        
          &lt;p&gt;Of course, this really shouldn&#39;t happen right? You&#39;re a responsible IT professional, and your OpenShift cluster is configured with multiple authentication methods, and a secure backup of a &lt;code&gt;kubeconfig&lt;/code&gt; file with the system:admin user certificates for passwordless login? Except sometimes it does.&lt;/p&gt;
&lt;p&gt;In my day job, we have a small lab OCP cluster running on vSphere that might not get used for weeks or sometimes months. The OpenShift nodes that make up the OCP cluster sometimes get automatically powered down and left off in that powered off state.&lt;/p&gt;
&lt;p&gt;Yesterday, I came to use this cluster for the first time again after quite a long period and found that I was unable to login with a standard LDAP user account with cluster-admin credentials that I would normally use. In addition, my admin &lt;code&gt;kubeconfig&lt;/code&gt; (the one generated by openshift-installer for the original installation), had very old pre-rotation CA certs or something and hadn&#39;t been used for a while. Attempting to use it just gave x509 errors and so it seemed unusable. This has happened a couple of times now over the years, and I believe it&#39;s related to it being an IPI cluster and certificate rotation issues from the cluster being powered down for long periods. Before looking at the root cause, I&#39;m just writing down the recovery procedure I used for next time!&lt;/p&gt;
&lt;p&gt;So with no standard OAUTH authentication method available, I went back trying to use the original kubeconfig from the installation of the cluster.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;$ export KUBECONFIG=auth/kubeconfig
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;$ oc get nodes
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;Unable to connect to the server: x509: certificate signed by unknown authority
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To try and understand more about what was happening, I added &lt;code&gt;--insecure-skip-tls-verify=true&lt;/code&gt;, and the &lt;code&gt;--loglevel=10&lt;/code&gt; options to the command line, but I could see that a goroutine stack trace was immediately output after the x509 error message above.&lt;/p&gt;
&lt;p&gt;As any experienced senior engineer will know, the first place to go for solving any technical problem is a good Google or StackOverflow search. Unfortunately StackOverflow threw up a lot of articles that were old, or weren&#39;t quite right and not what I was looking for.&lt;/p&gt;
&lt;p&gt;Unsurprisingly - this being OpenShift - the best results were found in the &lt;a href=&#34;https://access.redhat.com/search/#/&#34;&gt;RedHat Knowledgebase&lt;/a&gt;. The KB articles &lt;a href=&#34;https://access.redhat.com/solutions/4505101&#34;&gt;error: x509 certificate signed by unknown authority when logging in OpenShift 4 using the installation kubeconfig file&lt;/a&gt; and &lt;a href=&#34;https://access.redhat.com/solutions/5286371&#34;&gt;How to re create kubeconfig from scratch for system:admin user in OpenShift 4&lt;/a&gt; looked promising, but both required existing access to the cluster to recreate them, which I didn&#39;t have because standard authentication methods were not working.&lt;/p&gt;
&lt;p&gt;I knew that all the certs I needed were on the cluster nodes themselves, but these systems were running RedHat CoreOS. RedHat CoreOS is based on RedHat Enterprise Linux, but designed very much as an appliance. It&#39;s not expected to be managed by a human sysadmin - it has disabled root account, doesn&#39;t allow passwordless logins and its OS configuration is managed by the MachineConfigOperator function of OpenShift. The next problem was that (for reasons of this being a lab and the cluster being built by a colleague) the SSH key for the coreos user used for the installation wasn&#39;t available to me either :-) I did however, have access to the vSphere console of these VMS. There was no option, I had break my way in and get those certs.&lt;/p&gt;
&lt;p&gt;The first thing was to boot the system to single user, reset the root password so I could login on the console. I&#39;ve done this thousands of times over the years on many different versions of Linux and flavours of Linux, but interestingly this was more complicated on CoreOS (because of the way CoreOS works, and so it&#39;s not normally required). However, I did eventually get in and then I was able to locate the files I needed.&lt;/p&gt;
&lt;p&gt;So all the secrets needed to run kube-apiserver are found in &lt;code&gt;/etc/kubenetes/static-pod-resources/kube-apiserver-certs&lt;/code&gt;. In particular, the node-kubeconfigs/ directory has mulitple kubeconfig files, one of which was called &lt;code&gt;lb-int.kubeconfig&lt;/code&gt;. When I set my KUBECONFIG environment variable to point to this file, I was then able to issue oc commands to the cluster:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;# cd /etc/kubenetes/static-pod-resources/kube-apiserver-certs/secrets/node-kubeconfigs
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;# export KUBECONFIG=$(pwd)/lb-int.kubeconfig
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;# oc get nodes
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&amp;lt;lots of nodes with STATUS NotReady&amp;gt;
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;# oc get pods -A | grep -e Running
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;&amp;lt;lots of pods in ContainerCreating or Pending
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;# oc get csr -o name | xargs oc adm certificate approve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I found that half the nodes were in state &lt;code&gt;NotReady&lt;/code&gt;, and so the oauth-openshift containers were not &lt;code&gt;Running&lt;/code&gt;. This in turn was because there were a bunch of unapproved CSRs. Once these were approved, the nodes became &lt;code&gt;Ready&lt;/code&gt; and the OAuth authentication pods were able to start up and the cluster recovered itself in the usual way. I was then able to login normally again and recreate a backup &lt;code&gt;kubeconfig&lt;/code&gt;!&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Does Alpine resolve DNS properly?</title>
      <link>https://purplecarrot.co.uk/post/2021-09-04-does_alpine-resolve_dns_properly/</link>
      <pubDate>Sat, 04 Sep 2021 08:51:20 +0000</pubDate>
      
      <guid>https://purplecarrot.co.uk/post/2021-09-04-does_alpine-resolve_dns_properly/</guid>
      <description>
        
          &lt;p&gt;To anybody who has ever used containers, Alpine is a well known base operating system layer to many popular and widely used container images in use today. By design, it&#39;s a cut down minimal OS layer using the excellent &lt;a href=&#34;https://www.busybox.net/&#34;&gt;busybox&lt;/a&gt; and &lt;a href=&#34;https://musl.libc.org/&#34;&gt;musl libc&lt;/a&gt; C library. By using these alternatives to GNU Coreutils and GNU glibc C Library, it provides a base OS container layer that allows you to build and run very small Linux containers.&lt;/p&gt;
&lt;p&gt;This week I was asked to look at a problem where an application team could not resolve a key DNS name used on our internal network when running their application within the container - their first thought was a problem with the OpenShift/Kubernetes environment where the container was running.&lt;/p&gt;
&lt;p&gt;Unfortunately, the company I work for doesn&#39;t like us to disclose internal proprietary network information, so for the purposes of the post, let&#39;s say the DNS name being queried is &lt;code&gt;vis.company.com&lt;/code&gt; (very important service). All IPs and some other data in the extracts below have been manually changed to private RFC1918 addresses or redacted too.&lt;/p&gt;
&lt;h2 id=&#34;basic-troubleshooting&#34;&gt;Basic Troubleshooting&lt;/h2&gt;
&lt;p&gt;The first thing to do was to perform my own DNS lookup of &lt;code&gt;vis.company.com&lt;/code&gt;. This worked fine from both my Linux workstation and Windows laptop.&lt;/p&gt;
&lt;p&gt;Now what made this problem interesting was that the application running in the container was able to resolve all other DNS entries that it was required to in order to function(eg &lt;code&gt;a.company.com&lt;/code&gt;, &lt;code&gt;b.company.com&lt;/code&gt;), but it couldn&#39;t resolve this one crucial DNS entry &lt;code&gt;vis.company.com&lt;/code&gt;. When you connected to a shell running inside the container and ran &lt;code&gt;getent hosts vis.company.com&lt;/code&gt; it simply returned nothing at all, and exited with exit code 2.&lt;/p&gt;
&lt;h2 id=&#34;inside-the-container&#34;&gt;Inside the Container&lt;/h2&gt;
&lt;p&gt;So how do you go about troubleshooting a problem like this from within a container? In a standard OS, you can simply use the standard tools in your sysadmin toolkit - ss (lsof/netstat), dig, strace, tcpdump, nmap, etc - but inside a container these are unlikely to be available by default (and some containers don&#39;t even include a minimal unix shell even). I have a pre-built container I use for situations like this that I then add as a sidecar in the pod I&#39;m troubleshooting. Then by setting &lt;code&gt;shareProcessNamespace: true&lt;/code&gt; in the podspec, it will allow you to easily debug and strace processes running inside the first container from the sidecar.&lt;/p&gt;
&lt;h2 id=&#34;dns-query&#34;&gt;DNS Query&lt;/h2&gt;
&lt;p&gt;So strace&#39;ing the DNS queries I could see the &lt;code&gt;socket()&lt;/code&gt; and &lt;code&gt;bind()&lt;/code&gt; calls, followed by receiving a response from the DNS server. However, this response was empty. Something weird was happening, because running the same command on a standard Linux host you could see 100s of lines more of system calls and a good DNS response with multiple A records was returned.&lt;/p&gt;
&lt;p&gt;So the next step was to use tcpdump and capture a packet trace of the DNS query. Below is the relevant section from that pcap that shows the DNS query:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;18:00:27.376761 IP (tos 0x0, ttl 64, id 32569, offset 0, flags [DF], proto UDP (17), length 68)
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;    10.96.10.99.43507 &amp;gt; 10.96.0.10:domain: 19977+ A? vis.company.com. (40)
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;18:00:27.386585 IP (tos 0x0, ttl 64, id 24288, offset 0, flags [DF], proto UDP (17), length 79)
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;    10.96.0.10.domain &amp;gt; 10.96.10.99.43507: 19977| 0/0/1 (51)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So what does this tell us?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;This is standard UDP DNS query (id 19977) to query the IPv4 record &lt;code&gt;vis.company.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The DNS server response comes from &lt;code&gt;10.96.0.10&lt;/code&gt;, which is the Kubernetes &lt;code&gt;Service&lt;/code&gt; address for CoreDNS.&lt;/li&gt;
&lt;li&gt;A DNS response was received, but no DNS records were in it (&lt;code&gt;0/0/1&lt;/code&gt; = 0 answer records, 0 nameservers and 1 additional record which is the query address itself)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;|&lt;/code&gt; character after the 19977 id indicates that the TC (TrunCation) bit is set on this packet.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The most interesting of these is the last. The TC bit is used when the DNS response the DNS server wants to send to the client is longer than the 512bytes available to it in a UDP packet (see &lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc1035&#34;&gt;RFC1035&lt;/a&gt; for more information.)&lt;/p&gt;
&lt;p&gt;This is a signal to the DNS resolver client that it needs to switch from a standard UDP DNS query and do a new TCP DNS query instead - but in both the strace and tcpdump output of the application running the the Alpine container, the resolver query exited immediate after receiving this TC UDP packet from the DNS server.&lt;/p&gt;
&lt;p&gt;I expected this to be a bug, but it turned out that this is a &lt;a href=&#34;https://wiki.musl-libc.org/functional-differences-from-glibc.html&#34;&gt;functional difference between musl libc and glibc&lt;/a&gt; and is by design. The musl libc author states that he intentionally didn&#39;t support TCP as felt it would be better for performance and UX reasons:&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;My choice not to do TCP in musl&amp;#39;s stub resolver was based on an interpretation that truncated results are not just acceptable but better ux - not only do you save major round-trip delays to DNS but you also get a reasonable upper bound on # of addrs in result.&lt;/p&gt;&amp;mdash; Rich Felker (@RichFelker) &lt;a href=&#34;https://twitter.com/RichFelker/status/994629795551031296?ref_src=twsrc%5Etfw&#34;&gt;May 10, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;This is true, and a valid point. However, it means that this particular app would never work when running in a container based on Alpine. Sometimes predictable functionality is more important.&lt;/p&gt;
&lt;p&gt;There are various other ways this could have been made to work. Perhaps making the DNS entry smaller - which was indeed unnecessarily large - would indeed be a better fix, but unfortunately this wasn&#39;t a practical option as the DNS entry wasn&#39;t under this team&#39;s control.&lt;/p&gt;
&lt;p&gt;Instead, the quickest fix was to rebuild the application into a new container image using the RedHat UBI8 image as a base layer instead of Alpine. This image uses glibc resolver, and then the app then ran fine, in the same way as it did on the RedHat Linux 8 host where it had ran before being containerized.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Generating a RPM changelog using git log</title>
      <link>https://purplecarrot.co.uk/2015/11/19/generating-rpm-changelog-from-git-log/</link>
      <pubDate>Thu, 19 Nov 2015 16:11:00 +0000</pubDate>
      
      <guid>https://purplecarrot.co.uk/2015/11/19/generating-rpm-changelog-from-git-log/</guid>
      <description>
        
          &lt;p&gt;I use python setuptools bdist_rpm to build RPMs from the code in my git repositories and today I updated my automated build script (a wrapper around python setup.py to run pre-requisite functions) to generate an RPM changelog from the git log of the repository hosting the package and then automatically include this in the rpm being built. A search on github shows there are a few python scripts and pypi modules to do this, but I wondered if I could just use git log.&lt;/p&gt;
&lt;p&gt;It seems you can. The &lt;a href=&#34;http://fedoraproject.org/wiki/Packaging:Guidelines#Changelogs&#34;&gt;Fedora packaging&lt;/a&gt; describe the format of the changelog file. They also appear to recommend not using your vcs changelog as your changelog messages would be too terse for the users. However, in my case they&#39;re not and it&#39;s exactly what they want&lt;/p&gt;
&lt;p&gt;With git log you can use the --pretty option to format the output of the commit log. You select the appropriate formats from git &lt;a href=&#34;http://git-scm.com/docs/pretty-formats&#34;&gt;pretty-formats&lt;/a&gt; to make it output the git log in RPM changelog format. Unfortunately though, none of the date formats available are quite the correct format for an RPM changelog. It expects just the date of the change and doesn&#39;t want (nor can it handle) the time or the timezone offset of the git commit. The way I addressed this was to pipe the git log output through perl to remove those date fields. It would be nicer if git log had date +%H:%M:%S type formatting, but it doesn&#39;t, so we add the perl oneliner with a suitable regex to remove the parts we don&#39;t want.&lt;/p&gt;
&lt;p&gt;Also rpm-build (or perhaps setuptools) doesn&#39;t like any blank lines in the changelog file, so we remove those with perl -00 option. The contents of the generated changelog file (not the filename) are then passed into the setup.py --changelog option. The double quotes ensure the whitespace is preserved.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;$ git log --pretty&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;tformat:* %cd %an &amp;lt;%ae&amp;gt; (%h)%n- %s%b%n&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; perl -lap00e &lt;span class=&#34;s1&#34;&gt;&amp;#39;~s/(\d{2]:){2}\d{2} (\d{4}) [+-]\d{4}/$2/g&amp;#39;&lt;/span&gt; &amp;gt; changelog
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;$ python setup.py bdist_rpm --changelog&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;ltchangelog&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
        
      </description>
    </item>
    
    <item>
      <title>Fedora 22, Wayland and Multiple Monitors</title>
      <link>https://purplecarrot.co.uk/2015/09/24/fedora-22-wayland-and-multiple-monitors/</link>
      <pubDate>Thu, 24 Sep 2015 20:57:00 +0100</pubDate>
      
      <guid>https://purplecarrot.co.uk/2015/09/24/fedora-22-wayland-and-multiple-monitors/</guid>
      <description>
        
          &lt;p&gt;By default, a new Fedora installation or a fedup upgrade on my dual monitor machine will result in GDM displaying the list of users and login screen on my left hand monitor. But I want it on my right hand monitor...&lt;/p&gt;
&lt;p&gt;Up until now, I simply logged in and set up the configuration I wanted using Settings -&amp;gt; Displays. Then I took the &lt;code&gt;~/.config/monitors.xml&lt;/code&gt; file that is generated and copied it to &lt;code&gt;/var/lib/gdm/.config/monitors.xml&lt;/code&gt; ready for GDM to use.&lt;/p&gt;
&lt;p&gt;However, with Fedora 22, it appears that GDM is set to use Wayland, however once you login to a session, it continues to use X. This new Wayland config uses slightly different XML directives in the monitors.xml meaning a simple copy of your &lt;code&gt;~/.config/monitors.xml&lt;/code&gt; to &lt;code&gt;/var/lib/gdm/.config/monitors.xml&lt;/code&gt; no longer works.&lt;/p&gt;
&lt;p&gt;To work around this, click on the cog and select GNOME on Wayland. Then setup the Displays as you need them and then copy the &lt;code&gt;~/.config/monitors.xml&lt;/code&gt; file (which will be in &amp;quot;Wayland&amp;quot; format) again to &lt;code&gt;/var/lib/gdm/.config/monitors.xml&lt;/code&gt; and restart GDM (there may be a better way, but I switch to a virtual console and do init 3 followed by init 5)&lt;/p&gt;
&lt;p&gt;Then your GDM login screen will be correctly setup.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;UPDATE 20151008: After upgrading to latest rpm set last night, this is now broken again and GDM is displaying the login on the monitor I don&#39;t want it to be on. I verified the monitors.xml file for gdm was correct, but for some reason gdm doesn&#39;t appear to be honoring it. Not being something I want to investigate, I decided to just disable Wayland for the moment by adding the WaylandEnable=False /etc/gdm/custom.conf :-)&lt;/em&gt;&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>PKI Certificate Encoding Formats and File Extensions</title>
      <link>https://purplecarrot.co.uk/2015/05/22/pki-certificate-encoding-formats-and/</link>
      <pubDate>Fri, 22 May 2015 10:29:00 +0100</pubDate>
      
      <guid>https://purplecarrot.co.uk/2015/05/22/pki-certificate-encoding-formats-and/</guid>
      <description>
        
          &lt;p&gt;There are many different file formats and file extensions for storing certificates. It seems each time I come around to renewing a cert, I have forgetten what all the files and extensions mean.  So for next time...  Certificates are generally encoded in either Base64, PEM, or DEM formats.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Base64 (.cer)&lt;/strong&gt;
Originally developed for use with S/MIME (the first?) and the most widely supported format. More likely to be issued by Certificate Authorities that run on Linux.   A base64 encoded certificate can be opened in vi and will start with &amp;quot;-----BEGIN CERTIFICATE-----&amp;quot; and end with &amp;quot;-----END CERTIFICATE-----&amp;quot; with the BASE64 encoded data in the middle.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PEM - Privacy Enhanced Mail (.pem,.crt, .key, .cer)&lt;/strong&gt;
The PEM format is the most common format that CAs issue certificates in. They are ASCII and also BASE64 encoded and end and start with the same &amp;quot;-----BEGIN CERTIFICATE-----&amp;quot; and &amp;quot;-----END CERTIFICATE-----&amp;quot;  Certificates, certificate chains and private keys can be put into and distributed in PEM format.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DER - Distinguished Encoding Rules (.der, but also .cer or .crt)&lt;/strong&gt;
This is actually the same as PEM but whereas PEM is Base64 ASCII, DER is a binary form of the certificate and it does not have the BEGIN/END statements.   DER format supports storage of a single certificate, but can&#39;t be used for storing a private key or certificate chain. DER format is typically seen with java based platforms and applications.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PFX - Personal Information Exchange (.pfx)&lt;/strong&gt;
The PFX format (also known as PKCS #12) is a format that stores multiple certificates and private keys in one file. They are typically used on Windows machines to facilitate import and exports. They can be readily converted to the other formats&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PKCS#7 (.p7b)&lt;/strong&gt;
Allows storage of certificates and certificate chains but not private keys and commonly used by Certicate Authorities to provide certificate chains to clients.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Mass In Place Editing of Linux Configuration Files</title>
      <link>https://purplecarrot.co.uk/2015/01/14/mass-editing-of-linux-configuration/</link>
      <pubDate>Wed, 14 Jan 2015 17:20:00 +0000</pubDate>
      
      <guid>https://purplecarrot.co.uk/2015/01/14/mass-editing-of-linux-configuration/</guid>
      <description>
        
          &lt;p&gt;Generally, if I have 100 files that I need to edit and make changes in, I tend to write a perl or python script to make them (if I have 3 files, I just open them in VIM and make them manually!) Yesterday however, a colleague who doesn&#39;t code had to change 2 consecutive lines in about 400 similar files and wanted a simple &amp;quot;one liner&amp;quot; type way to do it.&lt;/p&gt;
&lt;p&gt;This perl one liner is what I gave him. It allows replacement of multi line text with another piece of multiline text, in place, in the file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;$ cat example.conf
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;Line1
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;Line2
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;Line3
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;Line4
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;$ perl -i -la0pe &amp;#39;~s/Line2\nLine3/ReplaceLine2\nReplaceLine3/g&amp;#39; example.conf
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;$ cat example.conf
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;Line1
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;ReplaceLine2
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;ReplaceLine3
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;Line4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It&#39;s then easy to use shell script to loop around all the files in a directory and run this command. If you&#39;re nervous, it&#39;s best to first check what your changes do by perhaps piping the file through perl.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;$ cat example.conf  | perl -la0pe &amp;#39;~s/Line2\nLine3/ReplaceLine2\nReplaceLine3/g&amp;#39;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;$ cat example.conf 
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;Line1
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;ReplaceLine2
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;ReplaceLine3
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;Line4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Another idea is also to use the -i.bak option to make backup files so you have a copy of the files before the edits ;-)&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Minecraft GNOME Desktop Icon</title>
      <link>https://purplecarrot.co.uk/2014/10/07/minecraft/</link>
      <pubDate>Tue, 07 Oct 2014 18:30:00 +0100</pubDate>
      
      <guid>https://purplecarrot.co.uk/2014/10/07/minecraft/</guid>
      <description>
        
          &lt;p&gt;I had an email about the minecraft.desktop file in the config file in a previous post. My kids love to play Minecraft, and installation of this simple GNOME .desktop file gives them the launcher icon on their desktops.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; /usr/share/applications/minecraft.desktop&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;[Desktop Entry]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Version&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;1.0&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;Minecraft&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;GenericName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;Minecraft&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Comment&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;Minecraft&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Exec&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;java -jar /data/minecraft/Minecraft.jar&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Icon&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;mcicon256&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Terminal&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;false&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;Application&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;EOF&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then of course, you must copy the nice shiny minecraft icon into /usr/share/icons/mcicon256.png. I also created a very basic puppet manifest to install it on their computers too!:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;$ cat minecraft.pp 
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;file &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/data/minecraft&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;:
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;ensure&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;directory&amp;#34;&lt;/span&gt;,
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;file &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/usr/share/icons/mcicon256.png&amp;#34;&lt;/span&gt;:
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;ensure&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; file,
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;owner&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; root,
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;group&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; root,
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; 644,
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;    &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;puppet:///files/minecraft/mcicon256.png&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;file &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/usr/share/applications/minecraft.desktop&amp;#34;&lt;/span&gt;:
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;ensure&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; file,
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;owner&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; root,
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;group&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; root,
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; 644,
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;    &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;puppet:///files/minecraft/minecraft.desktop&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;file &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/data/minecraft/startminecraft.sh&amp;#34;&lt;/span&gt;:
&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;ensure&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; file,
&lt;span class=&#34;ln&#34;&gt;24&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;owner&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; root,
&lt;span class=&#34;ln&#34;&gt;25&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;group&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; root,
&lt;span class=&#34;ln&#34;&gt;26&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; 755,
&lt;span class=&#34;ln&#34;&gt;27&lt;/span&gt;    &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;puppet:///files/minecraft/startminecraft.sh&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;29&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;30&lt;/span&gt;file &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/data/minecraft/Minecraft.jar&amp;#34;&lt;/span&gt;:
&lt;span class=&#34;ln&#34;&gt;31&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;ensure&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; file,
&lt;span class=&#34;ln&#34;&gt;32&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;owner&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; root,
&lt;span class=&#34;ln&#34;&gt;33&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;group&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; root,
&lt;span class=&#34;ln&#34;&gt;34&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; 644,
&lt;span class=&#34;ln&#34;&gt;35&lt;/span&gt;    &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;puppet:///files/minecraft/Minecraft.jar&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;36&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
        
      </description>
    </item>
    
    <item>
      <title>Configuring GNOME 3 Desktop and Shell</title>
      <link>https://purplecarrot.co.uk/2014/05/13/configuring-gnome-3-desktop-and-shell/</link>
      <pubDate>Tue, 13 May 2014 17:30:00 +0100</pubDate>
      
      <guid>https://purplecarrot.co.uk/2014/05/13/configuring-gnome-3-desktop-and-shell/</guid>
      <description>
        
          &lt;p&gt;When it comes to customising GNOME, its config has always confused me - gconf, dconf, gconf-edit,  gconftool - what are they all for? The furthest I&#39;ve ever delved into them was copying and pasting some tips (give me my minimize and maximize buttons back!).&lt;/p&gt;
&lt;p&gt;My Linux work is almost exclusively with headless servers sitting in data centres I never see, so I&#39;ve never taken the trouble to read or understand GNOME configuration. There has been lots of &lt;a href=&#34;http://http//en.wikipedia.org/wiki/Controversy_over_GNOME_3&#34;&gt;controversy&lt;/a&gt; over GNOME 3. I&#39;m all for change, but if only the configuration of GNOME 3 was easy a little easier. Most options aren&#39;t available to set in the GUI control panel, but there are plenty of options to be set. Unfortunately they tend to be hidden away and it is not at all clear how to set common settings. In turn, because of GNOME changes between versions, googling GNOME config finds much inaccurate or at best, out of date information.&lt;/p&gt;
&lt;p&gt;It was time to properly understand all these things.&lt;/p&gt;
&lt;p&gt;Forget gconftool, gconf-edit and scripts that sed gschema XML files (yes, there are some people sed&#39;ing XML files out there!). For GNOME 3 on Fedora 20 (RHEL 7), there are two tools of interest: gsettings and dconf-editor
This is best illustrated by way of an example. Here is a list of common settings I put as default on my Fedora desktops. They should be pretty self-explanatory. The links below contain list of further configuration settings you can apply. I only wish these were more readily exposed in the GUI.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Show Date in Gnome Shell Title Bar&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt; \&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;\&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eof&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;usr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;share&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;glib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;2.0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;schemas&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mysettings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gschema&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;override&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;org&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gnome&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;desktop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;interface&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clock&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;always&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Set the default icons in the icon bar&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;org&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gnome&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;desktop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;favorite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;apps&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;firefox.desktop&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;google-chrome.desktop&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;gnome-terminal.desktop&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;shotwell.desktop&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;nautilus.desktop&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;system-config-printer.desktop&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;minecraft.desktop&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;org&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gnome&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;desktop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;screensaver&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;activation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;enabled&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;false&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;org&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gnome&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shell&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;overrides&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;button_layout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minimize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maximize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;org&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gnome&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Terminal&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Legacy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Profile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;colors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;false&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;font&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;false&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;foreground&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;#ffffff&amp;#39;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;#000000&amp;#39;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;font&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Inconsolata Medium 11&amp;#39;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eof&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/9-Beta/html/Desktop_Migration_and_Administration_Guide/gsettings-dconf.html&#34;&gt;RedHat RHEL7 Desktop Migration and Administration Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.gnome.org/gio/stable/GSettings.html#GSettings.description&#34;&gt;GNOME gsettings reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://askubuntu.com/questions/249887/gconf-dconf-gsettings-and-the-relationship-between-them&#34;&gt;dconf, gconf and gsettings and the relationship between them&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        
      </description>
    </item>
    
    <item>
      <title>OpenSSL Command Line Quick Reference</title>
      <link>https://purplecarrot.co.uk/2014/04/24/openssl-command-line-quick-reference/</link>
      <pubDate>Thu, 24 Apr 2014 15:55:00 +0100</pubDate>
      
      <guid>https://purplecarrot.co.uk/2014/04/24/openssl-command-line-quick-reference/</guid>
      <description>
        
          &lt;p&gt;Is there anybody in the IT industry that wasn&#39;t doing something with openssl in April? &lt;a href=&#34;http://heartbleed.com/&#34;&gt;&lt;/a&gt; I don&#39;t use the openssl command line utility that often, but last week it reminded me that openssl command line tool is pretty comprehensive and has some nice features. I thought on this occasion I&#39;d record the most useful ones so that next time I don&#39;t have to look them up again!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Show Certificate Info&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;$ openssl x509 -text -in server.cert
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;$ openssl md5 server.cert
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;$ openssl sha1 server.cert
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Confirming openssl build info&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;openssl version -a
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;OpenSSL 1.0.1e-fips &lt;span class=&#34;m&#34;&gt;11&lt;/span&gt; Feb &lt;span class=&#34;m&#34;&gt;2013&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;built on: Tue Apr  &lt;span class=&#34;m&#34;&gt;8&lt;/span&gt; 00:29:11 UTC &lt;span class=&#34;m&#34;&gt;2014&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;platform: linux-x86_64
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;options:  bn&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;64,64&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; md2&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;int&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; rc4&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;16x,int&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; des&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;idx,cisc,16,int&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; idea&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;int&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; blowfish&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;idx&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;compiler: gcc -fPIC -DOPENSSL_PIC -DZLIB -DOPENSSL_THREADS -D_REENTRANT -DDSO_DLFCN -DHAVE_DLFCN_H -DKRB5_MIT -m64 -DL_ENDIAN -DTERMIO -Wall -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; -fexceptions -fstack-protector --param&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ssp-buffer-size&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; -grecord-gcc-switches  -m64 -mtune&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;generic -Wa,--noexecstack -DPURIFY -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_MONT5 -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DAES_ASM -DVPAES_ASM -DBSAES_ASM -DWHIRLPOOL_ASM -DGHASH_ASM
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;OPENSSLDIR: &lt;span class=&#34;s2&#34;&gt;&amp;#34;/etc/pki/tls&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;engines:  dynamic 
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Generate hashed passwords (for example, for Anaconda)&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;openssl passwd -1 mysecretword
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1$utlS7bht$VLMQrtHnPU0mkSO&lt;/span&gt;/Kpzh/.
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Directory complied in and used to search for openSSL files (--openssldir)&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;openssl version -d 
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I tend to use commercial SSL certificates or ones from my company&#39;s internal CA. However, I found this text file in my home directory which I&#39;m recording here for next time because it&#39;s a very easy quick reference for generating a self signed certificate:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Generate new private key&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;openssl genrsa -aes256 -out my.key &lt;span class=&#34;m&#34;&gt;4096&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Generate new certificate request&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;openssl req -new -key my.key -out my.csr
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Sign certificate&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;openssl x509 -req -days &lt;span class=&#34;m&#34;&gt;3650&lt;/span&gt; -in my.csr -signkey my.key -out my.crt
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Remove cert password&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;openssl rsa -in my.key -out my.key 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
        
      </description>
    </item>
    
    <item>
      <title>Mirror a Remote Directory over HTTP</title>
      <link>https://purplecarrot.co.uk/2014/01/25/mirror-remote-directory-over-http/</link>
      <pubDate>Sat, 25 Jan 2014 16:07:00 +0000</pubDate>
      
      <guid>https://purplecarrot.co.uk/2014/01/25/mirror-remote-directory-over-http/</guid>
      <description>
        
          &lt;p&gt;Different ways to mirror a remote directory:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;wget -r --no-parent http://server/location
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If there are any files you don&#39;t want you can add the --reject option: &amp;lt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;wget -r --no-parent --reject&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;tmp*&amp;#34;&lt;/span&gt; http://server/location
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;curl&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
        
      </description>
    </item>
    
    <item>
      <title>Configuring Out-Of-Band Management Interface from In-Band Server</title>
      <link>https://purplecarrot.co.uk/2013/10/11/configuring-out-of-band-management/</link>
      <pubDate>Fri, 11 Oct 2013 16:43:00 +0100</pubDate>
      
      <guid>https://purplecarrot.co.uk/2013/10/11/configuring-out-of-band-management/</guid>
      <description>
        
          &lt;p&gt;Most modern x86 servers include &lt;a href=&#34;http://en.wikipedia.org/wiki/Out-of-band_management&#34;&gt;out-of-band&lt;/a&gt; Management or Lights-out Management systems. These systems offer remote configuration and remote console access to a headless server normally located in a datacenter. These are typically used when first setting up a server, or perhaps when the server is hosed.  The company I work for is large enough to have dedicated server operators, and in my role I rarely if ever need to access the consoles of real devices. However, I recently needed to get to the console of a device and the server was in a different continent and timezone and I couldn&#39;t access the IP address I&#39;d been emailed :( Not a good start to the day.  I remember using ipmitool to configure OOB management before, but of course I never wrote down what I did then. As this blog is really a note taking memory aid system, I&#39;m writing it down for next time.  So using ipmitool I was able to determine the IP address of the server.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;ipmiserver# ipmitool -I open lan print &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;Set in Progress         : Set Complete
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;Auth Type Support       : NONE MD2 MD5 PASSWORD
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;Auth Type Enable        : Callback :
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;                        : User     : MD2 MD5 PASSWORD
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;                        : Operator : MD2 MD5 PASSWORD
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;                        : Admin    : MD5
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;                        : OEM      :
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;IP Address Source       : Static Address
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;IP Address              : 192.168.1.1
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;Subnet Mask             : 255.255.255.0
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;MAC Address             : 00:00:00:00:00:00
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;SNMP Community String   : public
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;IP Header               : &lt;span class=&#34;nv&#34;&gt;TTL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x40 &lt;span class=&#34;nv&#34;&gt;Flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x40 &lt;span class=&#34;nv&#34;&gt;Precedence&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x00 &lt;span class=&#34;nv&#34;&gt;TOS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x10
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;BMC ARP Control         : ARP Responses Enabled, Gratuitous ARP Disabled
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;Gratituous ARP Intrvl   : 2.0 seconds
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;Default Gateway IP      : 192.168.1.254
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;Default Gateway MAC     : 00:00:00:00:00:00
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;Backup Gateway IP       : 0.0.0.0
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;Backup Gateway MAC      : 00:00:00:00:00:00
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;802.1q VLAN ID          : Disabled
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;802.1q VLAN Priority    : &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;RMCP+ Cipher Suites     : 0,1,2,3,4
&lt;span class=&#34;ln&#34;&gt;24&lt;/span&gt;Cipher Suite Priv Max   : XaaaaXXXXXXXXXX
&lt;span class=&#34;ln&#34;&gt;25&lt;/span&gt;                        :     &lt;span class=&#34;nv&#34;&gt;X&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;Cipher Suite Unused
&lt;span class=&#34;ln&#34;&gt;26&lt;/span&gt;                        :     &lt;span class=&#34;nv&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;CALLBACK
&lt;span class=&#34;ln&#34;&gt;27&lt;/span&gt;                        :     &lt;span class=&#34;nv&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;USER
&lt;span class=&#34;ln&#34;&gt;28&lt;/span&gt;                        :     &lt;span class=&#34;nv&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;OPERATOR
&lt;span class=&#34;ln&#34;&gt;29&lt;/span&gt;                        :     &lt;span class=&#34;nv&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ADMIN
&lt;span class=&#34;ln&#34;&gt;30&lt;/span&gt;                        :     &lt;span class=&#34;nv&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;OEM
&lt;span class=&#34;ln&#34;&gt;31&lt;/span&gt;ipmiserver#
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;From this I noticed that the default gateway for the out-of-band was incorrect (as with all blog posts, the IPs are changed to RFC1918 private addresses here). What must have happen is that the server installation engineer had used a screen and keyboard on a trolley to configure the server, and then probably tested it from a device on the same subnet (I&#39;m being generous here, as he/she may have never bothered testing it!) Anyway, quick man ipmitool for syntax and this was easily fixed from the in-band server with the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;ipmitool -I open lan set 1 defgw ipaddr 192.168.1.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
        
      </description>
    </item>
    
    <item>
      <title>Determining the IP Address of a Server&#39;s Out of Band Management </title>
      <link>https://purplecarrot.co.uk/2013/10/11/determining-ip-address-of-servers-out/</link>
      <pubDate>Fri, 11 Oct 2013 16:11:00 +0100</pubDate>
      
      <guid>https://purplecarrot.co.uk/2013/10/11/determining-ip-address-of-servers-out/</guid>
      <description>
        
          &lt;p&gt;Nearly all enterprise x86 servers include an &lt;a href=&#34;http://en.wikipedia.org/wiki/Out-of-band_management&#34;&gt;out-of-band management interface&lt;/a&gt; such as &lt;a href=&#34;http://en.wikipedia.org/wiki/HP_Integrated_Lights-Out&#34;&gt;HP iLO&lt;/a&gt;, &lt;a href=&#34;http://en.wikipedia.org/wiki/IBM_Remote_Supervisor_Adapter&#34;&gt;IBM RSA&lt;/a&gt; or &lt;a href=&#34;http://en.wikipedia.org/wiki/Baseboard_Management_Controller#Baseboard_management_controller&#34;&gt;BMC&lt;/a&gt;, &lt;a href=&#34;http://en.wikipedia.org/wiki/Intelligent_Platform_Management_Interface&#34;&gt;IPMI&lt;/a&gt;, Dell DRAC, etc. These are used for remotely power cycling, monitoring and what the data centre ops guys, confusingly for me, call KVM access (that&#39;s Keyboard Video Mouse not Kernel Virtual Machine!)&lt;/p&gt;
&lt;p&gt;As shown in {{ site.baseurl }}{% post_url 2013-10-11-configuring-out-of-band-management %}
this post, finding out the IP of the Out-of-Band Management interface from the &amp;quot;in-band&amp;quot; server is at times very useful. Here is the quick reference way to find that out from the Linux command line for popular OOBs:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HP iLO&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;hpserver:~# hponcfg -a -w ilosettings.xml
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;HP Lights-Out Online Configuration utility
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;Version 4.0.0 Date 12/08/2011 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; Hewlett-Packard Company, &lt;span class=&#34;m&#34;&gt;2011&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;Firmware &lt;span class=&#34;nv&#34;&gt;Revision&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 1.29 Device &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; iLO &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; Driver &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; hpilo
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;Management Processor configuration is successfully written to file &lt;span class=&#34;s2&#34;&gt;&amp;#34;ilosettings.xml&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;hpserver:~# grep &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;IP_ADDRESS VALUE&amp;#34;&lt;/span&gt; ilosettings.xml
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;    &amp;lt;IP_ADDRESS &lt;span class=&#34;nv&#34;&gt;VALUE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;192.168.1.1&amp;#34;&lt;/span&gt;&amp;gt;
&lt;span class=&#34;ln&#34;&gt;8&lt;/span&gt;hpserver:~#
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;IPMI&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;ipmiserver# ipmitool -I open lan print &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;Set in Progress         : Set Complete
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;Auth Type Support       : NONE MD2 MD5 PASSWORD
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;Auth Type Enable        : Callback :
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;                        : User     : MD2 MD5 PASSWORD
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;                        : Operator : MD2 MD5 PASSWORD
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;                        : Admin    : MD5
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;                        : OEM      :
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;IP Address Source       : Static Address
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;IP Address              : 192.168.1.1
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;Subnet Mask             : 255.255.255.0
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;MAC Address             : 00:00:00:00:00:00
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;SNMP Community String   : public
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;IP Header               : &lt;span class=&#34;nv&#34;&gt;TTL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x40 &lt;span class=&#34;nv&#34;&gt;Flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x40 &lt;span class=&#34;nv&#34;&gt;Precedence&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x00 &lt;span class=&#34;nv&#34;&gt;TOS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x10
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;BMC ARP Control         : ARP Responses Enabled, Gratuitous ARP Disabled
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;Gratituous ARP Intrvl   : 2.0 seconds
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;Default Gateway IP      : 192.168.1.254
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;Default Gateway MAC     : 00:00:00:00:00:00
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;Backup Gateway IP       : 0.0.0.0
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;Backup Gateway MAC      : 00:00:00:00:00:00
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;802.1q VLAN ID          : Disabled
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;802.1q VLAN Priority    : &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;RMCP+ Cipher Suites     : 0,1,2,3,4
&lt;span class=&#34;ln&#34;&gt;24&lt;/span&gt;Cipher Suite Priv Max   : XaaaaXXXXXXXXXX
&lt;span class=&#34;ln&#34;&gt;25&lt;/span&gt;                        :     &lt;span class=&#34;nv&#34;&gt;X&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;Cipher Suite Unused
&lt;span class=&#34;ln&#34;&gt;26&lt;/span&gt;                        :     &lt;span class=&#34;nv&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;CALLBACK
&lt;span class=&#34;ln&#34;&gt;27&lt;/span&gt;                        :     &lt;span class=&#34;nv&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;USER
&lt;span class=&#34;ln&#34;&gt;28&lt;/span&gt;                        :     &lt;span class=&#34;nv&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;OPERATOR
&lt;span class=&#34;ln&#34;&gt;29&lt;/span&gt;                        :     &lt;span class=&#34;nv&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ADMIN
&lt;span class=&#34;ln&#34;&gt;30&lt;/span&gt;                        :     &lt;span class=&#34;nv&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;OEM
&lt;span class=&#34;ln&#34;&gt;31&lt;/span&gt;ipmiserver#
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
        
      </description>
    </item>
    
    <item>
      <title>Broadband External IP Address from Command Line</title>
      <link>https://purplecarrot.co.uk/2013/09/16/broadband-external-ip-address-from/</link>
      <pubDate>Mon, 16 Sep 2013 09:04:00 +0100</pubDate>
      
      <guid>https://purplecarrot.co.uk/2013/09/16/broadband-external-ip-address-from/</guid>
      <description>
        
          &lt;p&gt;Just typing &amp;quot;What is my external ip address&amp;quot; into Google is normally the most convenient way to find your external public IP address when you&#39;re behind a NAT&#39;d broadband connection. The site ipconfig.me offers an alternative and clean way to get it from the command line, for example for use in a shell script:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;server# curl ifconfig.me
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;132.231.56.65
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;server# curl ifconfig.me/host
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;132-231-56-65.myisp.com
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;They have a range of options to return IP, Hostname, UserAgent, etc. The one I may be using is ifconfig.me/all.json or all.xml, to make it even easier to read into a Perl or Python script!&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Getting VIM Powerline Working with Putty</title>
      <link>https://purplecarrot.co.uk/2013/09/09/getting-vim-powerline-working-with-putty/</link>
      <pubDate>Mon, 09 Sep 2013 22:06:00 +0100</pubDate>
      
      <guid>https://purplecarrot.co.uk/2013/09/09/getting-vim-powerline-working-with-putty/</guid>
      <description>
        
          &lt;p&gt;After using vim and vi for more years than I care to remember, I came across the &lt;a href=&#34;https://github.com/Lokaltog/powerline&#34;&gt;vim powerline plugin&lt;/a&gt; for the first time today. What an excellent vim statusline, and now I&#39;ve been using it myself, I can see why it&#39;s so popular (that&#39;s a relative term - as in popular for a vim extensions! )&lt;/p&gt;
&lt;p&gt;Following the &lt;a href=&#34;https://powerline.readthedocs.org/en/latest/installation/linux.html#installation-linux&#34;&gt;installation documentation&lt;/a&gt;, and thanks to &lt;a href=&#34;Pathogen&#34;&gt;Pathogen&lt;/a&gt; it was very straight forward to setup. After installation in my bundle directory, I simply switched Putty to UTF-8 and then added the following lines to my .vimrc&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;rtp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt;~/.vim/bundle/powerline/powerline/bindings/vim
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;encoding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;utf-8
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;laststatus&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;..and then it was all working nicely in Linux gnome-terminal.&lt;/p&gt;
&lt;p&gt;However, when I came to using the same setup with Putty from Windows 7 machine (I have no choice, the firm I work for doesn&#39;t allow connection of a non-firm owned device to the network, so no connecting my Mac or Linux laptop here!), the character set was all screwed up.  This is because powerline uses custom glyphs in the status bar and the MS Win 7 supplied Consolas font doesn&#39;t include those glyphs.&lt;/p&gt;
&lt;p&gt;Unfortunately, my Win 7 machine doesn&#39;t have a full development environment, so &lt;a href=&#34;https://powerline.readthedocs.org/en/latest/fontpatching.html&#34;&gt;fontpatching&lt;/a&gt; the Consolas font I use (as instructed to do in Linux/Mac OS X) was not an [easy] option. Luckily, I found there were already Consolas patched fonts around other people had made available. I first tried &lt;a href=&#34;https://github.com/Lokaltog/powerline-fonts/blob/master/Inconsolata/Inconsolata%20for%20Powerline.otf&#34;&gt;Inconsolata for Powerline&lt;/a&gt; as this was what&#39;s in the powerline repo and what the server and my Linux workstation used, but though fine in Linux, that just didn&#39;t look pretty in Putty. Next, I found posts referencing these &lt;a href=&#34;https://github.com/eugeneching/consolas-powerline-vim&#34;&gt;patched Consolas&lt;/a&gt; fonts, but after installation, it still wasn&#39;t displaying the correct characters. Being a bit of a vim plugin amateur, I checked and double-checked settings but to no avail.&lt;/p&gt;
&lt;p&gt;Then I came across some comments about the new (rewritten in Python) powerline plugin not using the same codes as the old powerline.   By this time, I just wanted it working. This was one of those slight 10min deviations that was making me forget what I was originally doing. Enter cut and paste and the perl one-liner.&lt;/p&gt;
&lt;p&gt;I used charmap to lookup the UTF-8 character codes, and then printed them to the terminal. Yippee! This at least confirmed my terminal, fonts and putty were correctly setup to display the characters, so the problem wasn&#39;t in either of these areas. So I looked at the default powerline config.json, and confirmed that it wasn&#39;t displaying the characters I was expecting to see. So next I &lt;a href=&#34;https://powerline.readthedocs.org/en/latest/configuration.html&#34;&gt;configured a local config.json&lt;/a&gt;
and simply cut and paste the characters output from the perl one-liner and pasted them into the config.json in my home directory.&lt;/p&gt;
&lt;p&gt;And voila...a working vim powerline plugin on Linux from Putty on Win7. Now I know this is not the right solution, and normally curiosity would force me get to the bottom of this and understand what was wrong, but having already spent an hr reading about the plugin and comments and dead ends refering to the old non-python version of the plugin, this got me a working powerline in Windows and so I&#39;m happy with that. I just had to have those cute triangles in my menu bar - and no, ugly chars was not an option :-)&lt;/p&gt;
&lt;p&gt;Getting SyntaxHighlighter to display these glyphs is certainly not something I want to spend 2 minutes investigating at the moment, so instead a screenshot of the perl one-liner and the changes to config.json:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://purplecarrot.co.uk/images/posts/powerlineputty.png&#34; alt=&#34;Glyph icons&#34;&gt;&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Integrated Web Serving with BaseHTTPServer</title>
      <link>https://purplecarrot.co.uk/2013/08/16/these-last-few-days-i-have-been-writing/</link>
      <pubDate>Fri, 16 Aug 2013 17:49:00 +0100</pubDate>
      
      <guid>https://purplecarrot.co.uk/2013/08/16/these-last-few-days-i-have-been-writing/</guid>
      <description>
        
          &lt;p&gt;These last few days I have been writing a command line reporting program at work. For Linux techs, formatted terminal output works great and is actually their preferred view. However, for managers, you simple must have the eye candy of a GUI. Normally in these situations, I would simply add CGI code and then bundle a simple Apache config to &lt;em&gt;Include&lt;/em&gt; along with the code. With this particular program, it could be run on any one of tens of thousands of servers we have, however it is only likely to be run for a short while to graphically review some data stored in JSON files on the server. The overhead of reconfiguring and restarting Apache, even though only a few commands, is probably too much in this particular scenario.&lt;/p&gt;
&lt;p&gt;Enter &lt;a href=&#34;http://docs.python.org/2/library/basehttpserver.html&#34;&gt;BaseHTTPServer&lt;/a&gt;. This includes classes that let your program become the webserver itself, negating the need to run a CGI script or framework under full blown Apache.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;MyWebServer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BaseHTTPServer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BaseHTTPRequestHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;do_HEAD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send_response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send_header&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Content-type&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;text/html&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end_headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;do_GET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;            &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send_response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;            &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send_header&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Content-type&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;text/html&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;            &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end_headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;            &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Web Page&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;  
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;                &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;show_table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;            &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;                &lt;span class=&#34;n&#34;&gt;reportjson&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rootdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;                &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;show_table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;IOError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;            &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send_error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;404&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Oops: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;24&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;26&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;httpd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BaseHTTPServer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HTTPServer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;0.0.0.0&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MyWebServer&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;27&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;28&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;29&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;httpd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;serve_forever&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;30&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;31&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;KeyboardInterrupt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;32&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;33&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;httpd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;server_close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;34&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now, this obviously isn&#39;t going to replace your Apache installation (though I came across bugs in BaseHTTPServer where people were seemingly trying to!) but for development purposes and short lived web serving without affecting the running Apache server on your server, this is a very useful feature I am sure I will be using time and time again.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Who logs in the most?</title>
      <link>https://purplecarrot.co.uk/2011/05/16/who-logs-in-most/</link>
      <pubDate>Mon, 16 May 2011 22:01:00 +0100</pubDate>
      
      <guid>https://purplecarrot.co.uk/2011/05/16/who-logs-in-most/</guid>
      <description>
        
          &lt;p&gt;I work in a firm with 10s of 1000s of Linux servers. A colleague had been emailed a list of servers and was trying to find out who owned them. At first, I suggested running last to see who last logged in but we realised this probably wasn&#39;t the best way to start the hunt. On reflection, the was a high chance that the user who logged in the &lt;em&gt;most&lt;/em&gt; frequently into the server, was the the owner of that server. Or if not, he would most likely know the owner ;-)&lt;/p&gt;
&lt;p&gt;So I used this 30 second one liner (wrapped for viewability) to list most frequent users:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;last&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;perl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lane&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;$users{$F[0]}++; END { 
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;foreach $u (reverse sort { $users{$a} &amp;lt;=&amp;gt; $users{b} } keys %users) 
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;{ print &amp;#34;$u logged in $users{$u} times&amp;#34;; } }&amp;#39;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tom&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logged&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;108&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;times&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sally&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logged&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;81&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;times&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dave&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logged&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;times&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logged&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;27&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;times&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;richard&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logged&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;times&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;admin&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logged&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;times&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wtmp&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logged&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;times&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
        
      </description>
    </item>
    
  </channel>
</rss>
